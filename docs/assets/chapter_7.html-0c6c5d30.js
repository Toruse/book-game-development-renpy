import{_ as i,M as d,p as l,q as o,R as n,t as e,N as t,a1 as s}from"./framework-5866ffd3.js";const r={},p=s(`<h1 id="глава-7-три-мини-игры" tabindex="-1"><a class="header-anchor" href="#глава-7-три-мини-игры" aria-hidden="true">#</a> Глава 7. Три мини игры</h1><p>На основе рассмотренной в первой главе повести мы создадим визуальную новеллу на Ren’Py, Twine и TyranoBuilder под названием <em>&quot;Август возвращается&quot;</em>. В процессе создания предпочтение будет предоставлено больше Ren’Py.</p><p>Хотя вы можете написать свою собственную историю, однако, чтобы это сделать правильно, лучше сперва познакомьтесь, как происходит процесс превращения повести в игру.</p><h2 id="составляем-план" tabindex="-1"><a class="header-anchor" href="#составляем-план" aria-hidden="true">#</a> Составляем план</h2><p>Перед программированием, желательно составить план для вашего приключения, то есть сделать каталогизацию персонажей, определить сцены. Может показаться это лишним, но без этого не обойтись при работе в больших командах.</p><p>Сначала разложим повесть <em>&quot;Август возвращается&quot;</em> на блоки в виде таблиц. Так же вы можете воспользоваться другим методом визуализации для этих целей. Главное – не пропускать данный этап, во избежание негативных последствий при создании игры.</p><h3 id="состав-персонажеи" tabindex="-1"><a class="header-anchor" href="#состав-персонажеи" aria-hidden="true">#</a> Состав персонажей</h3><p>Начнем с персонажей (см. Таблицу 7-1). Если забыли про них, то вернитесь к первой главе книги.</p><p>В это же главе повторите материал про 12 архетипов личности Джозефа Кэмпбелла, некоторые из них будут использованы в создаваемой игре.</p><p><strong>Таблица 7-1.</strong> Главные герои</p><table><thead><tr><th>Герой</th><th>Роль/Архетип</th><th>Пол и Возраст</th><th>Внешний вид</th></tr></thead><tbody><tr><td><em><strong>Рон Легион-Смерти</strong></em></td><td>Главный герой (т. е. игрок)</td><td>Мужчина, около 30 лет</td><td>Среднего телосложения и роста, на вид физически подтянутый</td></tr><tr><td><em><strong>Мервин Попплуэлл</strong></em></td><td>Искатель</td><td>Мужчина, лет за 30</td><td>Худой, среднего роста, небрежно одетый</td></tr><tr><td><em><strong>Ройстон Медовая-Бабочка</strong></em></td><td>Мудрец</td><td>Мужчина, 50 лет</td><td>Крепкое телосложение, имеет обычный вид</td></tr><tr><td><em><strong>Клэр</strong></em></td><td>Правитель</td><td>Женщина, около 20 лет</td><td>Спортивное телосложение, среднего роста, модно одетая</td></tr><tr><td><em><strong>Человек в комбинезоне</strong></em></td><td>Бунтарь</td><td>Мужчина, без возраста</td><td>Спортивное телосложение, высокий, лысый с причудливым видом</td></tr><tr><td><em><strong>Рейн</strong></em></td><td>Любовник</td><td>Женщина, около 30 лет</td><td>Среднее телосложение, низкий рост, изящный вид</td></tr></tbody></table><h3 id="локации" tabindex="-1"><a class="header-anchor" href="#локации" aria-hidden="true">#</a> Локации</h3><p>В визуальных новеллах главное не количество локаций, а количество слов в повествовании. В среднем это от 10000 до 50000 слов.</p><blockquote><p>Примечание:</p><p>Игра, создаваемая в этой книге, не соответствует вышеуказанному правилу.</p></blockquote><p>По сравнению с каталогизацией персонажей, определиться с локациями событий в игре сложнее. Слишком малое количество портят атмосферу, а слишком много сбивают с толку игрока. Лучше всего начать с малого, определить основные элементы игры, после чего разделить их на более мелкие единицы (например, комнаты) (см. Таблицу 7-2).</p><p>Для построения истории мы воспользуемся такими понятиями как:</p><ul><li><strong>Сеттинг</strong> – это среда, в которой происходит действие, где определяются базовые свойства реальности. В нашем случае это общая тема, атмосфера происходящего (например, стиль фона).</li><li><strong>Место</strong>, обстоятельство и время при которых развиваются события. Здесь могут быть применены разные звуковые дорожки, задний фон.</li><li><strong>Комнаты</strong> – наименьшая единица локации игры, которые часто имеют связь между собой.</li></ul><p><strong>Таблица 7-2.</strong> Основные сеттинги и места повести &quot;Август возвращается&quot;</p><table><thead><tr><th>Сеттинг</th><th>Место</th><th>Пример описание комнаты</th></tr></thead><tbody><tr><td><em><strong>Офис</strong></em></td><td><em>Рабочее место Рона</em></td><td>Вы бездельничаете за рабочим столом, на котором среди стопок бумаг стоит персональный компьютер. Только наклейка с изображением женщины-киборга выделяет ваше рабочее место среди всех остальных.</td></tr><tr><td><em><strong>Офис</strong></em></td><td><em>Помещение, где храниться сотовый телефон</em></td><td>Поднявшись на верхний этаж, вы попадаете в заброшенную часть офиса со старой мебелью.</td></tr><tr><td><em><strong>Город</strong></em></td><td><em>Парк, Арка</em></td><td>Ночь, одинокая арка городского парка, статуи освещённые тусклым светом, только усиливают волнения и страх вызванный недавними событиями.</td></tr><tr><td><em><strong>Офис (Пожар)</strong></em></td><td><em>Рабочий стол Рона</em></td><td>Ад. Рабочее место Рона окутано огнём. Защищаясь портфелем, он ныряет в него.</td></tr><tr><td><em><strong>Город (Жилой район)</strong></em></td><td><em>Квартира Рона</em></td><td>Квартира главного героя становится не такой безопасной, когда из-за двери доносятся странные звуки.</td></tr><tr><td><em><strong>Город (Железнодорожный вокзал)</strong></em></td><td><em>Железнодорожный вокзал</em></td><td>Вы испуганный, лихорадочно просматриваете расписание движения поездов в поиске ближайшего, который готов к отправке.</td></tr><tr><td><em><strong>Поезд</strong></em></td><td><em>Поезд на север</em></td><td>Сидя в мягком сиденье поезда, женщина с черными волосами напротив вас сняла наушники, улыбнулась и представилась.</td></tr><tr><td><em><strong>Конечная станция</strong></em></td><td><em>Конечная станция</em></td><td>Пытаясь слиться с толпой, вас ловят за руку.</td></tr><tr><td><em><strong>Остров</strong></em></td><td><em>Остров</em></td><td>Вы высаживаетесь на острове, для вас это чужой мир. Холод проникает до дрожи костей. Корабль покидает причал, и вы остаетесь один на холодном северном ветре.</td></tr><tr><td><em><strong>Остров</strong></em></td><td><em>Бункер</em></td><td>Незаметное снаружи строение на удивление оказалось просторным, комфортным, с отличной мебелью. Это напоминало больше отель нежели бункер.</td></tr><tr><td><em><strong>Океан</strong></em></td><td><em>Судно</em></td><td>По правому борту без опознавательных знаков появляется второе судно. Вы начинаете паниковать.</td></tr><tr><td><em><strong>Север</strong></em></td><td><em>Аэропорт</em></td><td>Вы оказываетесь в международном аэропорту, заполненным огромным количеством людей. Возможность раствориться в толпе успокаивает вас.</td></tr><tr><td><em><strong>Город</strong></em></td><td><em>Аэропорт</em></td><td>Вас окружает беззаботная жизнь. Туристы, тянут свой багаж, но вы внутренне готовитесь к битве всей своей жизни.</td></tr><tr><td><em><strong>Город</strong></em></td><td><em>Резиденция президента</em></td><td>Нет времени любоваться городом. По вам открыли огонь, остается только бежать.</td></tr><tr><td><em><strong>Новый офис</strong></em></td><td><em>Новое рабочее место Рона</em></td><td>Прежде чем приступить к новым обязанностям, он с тяжестью в душе возвращает старый сотовый телефон в шкаф.</td></tr></tbody></table><p>Теперь разделим вышеупомянутые места на более мелкие эпизоды, а именно на комнаты. Давайте сперва это сделаем для сеттинга &quot;Офис&quot; (см. Таблицу 7-3).</p><p><strong>Таблица 7-3.</strong> Сеттинг &quot;Офис&quot; в повести &quot;Август возвращается&quot;</p><table><thead><tr><th>Сеттинг</th><th>Место</th><th>Комната</th><th>Связанные комнаты</th></tr></thead><tbody><tr><td><em><strong>Офис</strong></em></td><td><em>Рабочее место Рона</em></td><td><em>Рабочий стол Рона</em></td><td><em>Зона с питьевым фонтанчиком, Рабочий стол Ройстона</em></td></tr><tr><td></td><td></td><td><em>Зона с питьевым фонтанчиком</em></td><td><em>Рабочий стол Рона, Соседний рабочий стол</em></td></tr><tr><td></td><td></td><td><em>Соседний рабочий стол</em></td><td><em>Зона с питьевым фонтанчиком</em></td></tr><tr><td></td><td><em>Верхний этаж (т. е. место хранение телефона)</em></td><td><em>Рабочий стол Ройстона</em></td><td><em>Рабочий стол Рона, Шкаф для документов</em></td></tr><tr><td></td><td></td><td><em>Шкаф для документов</em></td><td><em>Рабочий стол Ройстона</em></td></tr></tbody></table><h4 id="сеттинг-i-офис" tabindex="-1"><a class="header-anchor" href="#сеттинг-i-офис" aria-hidden="true">#</a> <em>Сеттинг I. Офис</em></h4><p>Как вы, помните, наше приключение начинается с того, что Рон получает загадочное письмо от умершего коллеги, некоего Мервина Попплуэлла.</p><p>Замечания по обстановки в <strong>Офисе</strong>:</p><ul><li>Тон написания должен быть мрачным и зловещим.</li><li>Звуковое сопровождение — это рабочий шум офиса, звуки работающей аппаратуры, ксерокса, приглушенные голоса сотрудников, телефонный звонки и разговоры.</li></ul><h4 id="сеттинг-ii-город" tabindex="-1"><a class="header-anchor" href="#сеттинг-ii-город" aria-hidden="true">#</a> <em>Сеттинг II. Город</em></h4><p>Выполняя инструкцию из загадочного письма, мы идем по улицам города в направлении арки парка (см. Таблицу 7-4).</p><p><strong>Таблица 7-4.</strong> Сеттинг &quot;Город&quot; в повести &quot;Август возвращается&quot;</p><table><thead><tr><th>Сеттинг</th><th>Место</th><th>Комната</th><th>Связанные комнаты</th></tr></thead><tbody><tr><td><em><strong>Город</strong></em></td><td><em>Парк</em></td><td><em>Парк</em></td><td><em>Арка</em></td></tr><tr><td></td><td><em>Арка</em></td><td><em>Арка</em></td><td><em>Парк</em></td></tr><tr><td></td><td><em>Улица</em></td><td><em>Дорога мимо офиса</em></td><td><em>Арка</em></td></tr><tr><td></td><td></td><td><em>Увиденный пожар</em></td><td><em>Нет</em></td></tr></tbody></table><p>Замечание к дизайну <strong>Города</strong>:</p><ul><li>Тон письма по-прежнему должен быть зловещим.</li><li>Звук — это уличная суета: проезжающие мимо автомобили, шаги людей, разговоры по мобильным телефонам, и иногда сигнал работающего светофора.</li></ul><h4 id="сеттинг-iii-офис-пожар" tabindex="-1"><a class="header-anchor" href="#сеттинг-iii-офис-пожар" aria-hidden="true">#</a> <em>Сеттинг III. Офис (Пожар)</em></h4><p>Это один из опасных моментов в приключениях нашего главного героя. Рон решился вернуться в свой офис, но он оказался охвачен огнем (см. Таблицу 7-5). Не имея средств защиты, кроме портфеля, он бросается в жерло пожара.</p><p><strong>Таблица 7-5.</strong> Сеттинг &quot;Офис (Пожар)&quot; в повести &quot;Август возвращается&quot;</p><table><thead><tr><th>Сеттинг</th><th>Место</th><th>Комната</th><th>Связанные комнаты</th></tr></thead><tbody><tr><td><em><strong>Город</strong></em></td><td><em>Вход в офис со двора</em></td><td><em>Переулок</em></td><td><em>Пожарная лестница</em></td></tr><tr><td><em><strong>Офис (Пожар)</strong></em></td><td></td><td><em>Пожарная лестница</em></td><td><em>Помещение офиса</em></td></tr><tr><td></td><td></td><td><em>Помещение офиса</em></td><td><em>Рабочий стол Рона</em></td></tr><tr><td></td><td></td><td><em>Рабочий стол Рона</em></td><td><em>Соседний стол А</em></td></tr><tr><td></td><td></td><td><em>Соседний стол А</em></td><td><em>Рабочий стол Рона, Соседний стол Б</em></td></tr><tr><td></td><td></td><td><em>Соседний стол Б</em></td><td><em>Соседний стол А</em></td></tr></tbody></table><p>Замечания по обстановке в сеттинге <strong>Офис (Пожар)</strong>:</p><ul><li>Тон повествования должен выражать огорчение и растерянность главного героя.</li><li>Аудио сопровождение в данном сеттинге — это звуки пожарных машин, пламени и обрушения внутри здания.</li></ul><h4 id="сеттинг-iv-город-жилои-раион" tabindex="-1"><a class="header-anchor" href="#сеттинг-iv-город-жилои-раион" aria-hidden="true">#</a> <em>Сеттинг IV. Город (Жилой район)</em></h4><p>В этой точке сюжета Рон направляется домой. Но и здесь что-то происходит непонятное. Он слышит, странные звуки из своей квартиры. Рон чувствует интуицией, что если туда войдет, то уже никогда из неё не выйдет (см. Таблицу 7-6).</p><p><strong>Таблица 7-6.</strong> Сеттинг &quot;Город (Жилой район)&quot; в повести &quot;Август возвращается&quot;</p><table><thead><tr><th>Сеттинг</th><th>Место</th><th>Комната</th><th>Связанные комнаты</th></tr></thead><tbody><tr><td><em><strong>Город (Жилой район)</strong></em></td><td><em>Квартира Рона</em></td><td><em>Улица</em></td><td><em>Нет</em></td></tr><tr><td></td><td></td><td><em>Коридор</em></td><td><em>Улица</em></td></tr><tr><td></td><td></td><td><em>Дверь квартира Рона</em></td><td><em>Коридор, Квартира Рона</em></td></tr><tr><td></td><td></td><td><em>Квартира Рона</em></td><td><em>Нет</em></td></tr></tbody></table><p>Замечание к дизайну <strong>Город (Жилой район)</strong>:</p><ul><li>Написание в этой короткой, но напряженной сцене, должно передавать чувство обреченности.</li><li>Что касается аудио, то мы должны услышать эхо шагов и непривычные инопланетные звуки.</li></ul><h4 id="сеттинг-v-город-железнодорожныи-вокзал" tabindex="-1"><a class="header-anchor" href="#сеттинг-v-город-железнодорожныи-вокзал" aria-hidden="true">#</a> <em>Сеттинг V. Город (Железнодорожный вокзал)</em></h4><p>Теперь, находиться в городе стало опасно для жизни Рона, его нужно немедленно покинуть, из-за чего он как можно скорей пытается добраться до вокзала. Где Рон садится на первый поезд, идущий на север (см. Таблицу 7-7).</p><p><strong>Таблица 7-7.</strong> Сеттинг &quot;Город (Железнодорожный вокзал)&quot; в повести &quot;Август возвращается&quot;</p><table><thead><tr><th>Сеттинг</th><th>Место</th><th>Комната</th><th>Связанные комнаты</th></tr></thead><tbody><tr><td><em><strong>Город (Железнодорожный вокзал)</strong></em></td><td><em>Железнодорожный вокзал</em></td><td><em>Статуя</em></td><td><em>Платформа А</em></td></tr><tr><td></td><td></td><td><em>Платформа А</em></td><td><em>Статуя, Платформа Б</em></td></tr><tr><td></td><td></td><td><em>Платформа Б</em></td><td><em>Поезд</em></td></tr><tr><td></td><td></td><td><em>Поезд</em></td><td><em>Нет</em></td></tr></tbody></table><p>Замечание к дизайну <strong>Город (Железнодорожный вокзал)</strong>:</p><ul><li>Тон написания остаётся прежним. Рона преследуют, и он в панике.</li><li>Звук в этом сеттинге такой же, как и в городе, только сообщает о присутствии большого количества людей.</li></ul><h4 id="сеттинг-vi-поезд" tabindex="-1"><a class="header-anchor" href="#сеттинг-vi-поезд" aria-hidden="true">#</a> <em>Сеттинг VI. Поезд</em></h4><p>Зайдя в поезд, Рон немного успокаивается. Однако это спокойствие длится недолго, его продолжают преследовать (см. Таблицу 7-8). В результате он запирается в туалете, прячась от преследователей. В этот момент ему позвонили на старый мобильный телефон, и сказали покинуть поезд на ближайшей станции.</p><p><strong>Таблица 7-8.</strong> Сеттинг &quot;Поезд&quot; в повести &quot;Август возвращается&quot;</p><table><thead><tr><th>Сеттинг</th><th>Место</th><th>Комната</th><th>Связанные комнаты</th></tr></thead><tbody><tr><td><em><strong>Поезд</strong></em></td><td><em>Поезд на север</em></td><td><em>Двери поезда</em></td><td><em>Нет</em></td></tr><tr><td></td><td></td><td><em>Первый вагон</em></td><td><em>Второй вагон, Двери поезда</em></td></tr><tr><td></td><td></td><td><em>Второй вагон</em></td><td><em>Первый вагон</em></td></tr><tr><td></td><td></td><td><em>Туалет в поезде</em></td><td><em>Второй вагон, Третий вагон</em></td></tr><tr><td></td><td></td><td><em>Третий вагон</em></td><td><em>Нет</em></td></tr></tbody></table><p>Замечание к дизайну сеттинга <strong>Поезд</strong>:</p><ul><li>Обстановка в плане драматичности остаётся прежней и усиливается к завершению данного сеттинга.</li><li>Атмосфера – тихий шум движущегося поезда.</li></ul><h4 id="сеттинг-vii-конечная-станция" tabindex="-1"><a class="header-anchor" href="#сеттинг-vii-конечная-станция" aria-hidden="true">#</a> <em>Сеттинг VII. Конечная станция</em></h4><p>Рон, не зная, что делать, метается по платформе, пока его не хватает кто-то за руку. Рона начинает трясти, но это оказался коллега из отдела технической поддержки Ройстон Медовая-Бабочка. После встречи они оказываются в парке на скамейке возле станции, где Рону сообщают о деталях происходящего (см. Таблицу 7-9).</p><p><strong>Таблица 7-9.</strong> Сеттинг &quot;Конечная станция&quot; в повести &quot;Август возвращается&quot;</p><table><thead><tr><th>Сеттинг</th><th>Место</th><th>Комната</th><th>Связанные комнаты</th></tr></thead><tbody><tr><td><em><strong>Конечная станция</strong></em></td><td><em>Конечная станция</em></td><td><em>Платформа А</em></td><td><em>Платформа Б</em></td></tr><tr><td></td><td></td><td><em>Платформа Б</em></td><td><em>Платформа А, Дорога в парк</em></td></tr><tr><td></td><td></td><td><em>Дорога в парк</em></td><td><em>Скамейке в парке</em></td></tr><tr><td></td><td></td><td><em>Скамейке в парке</em></td><td></td></tr></tbody></table><p>Замечание к дизайну сеттинга <strong>Конечная станция</strong>:</p><ul><li>Не считая ситуации на платформе, сеттинг имеет расслабленный тон повествования. В этой сцене благодаря встречи с союзником главный герой чувствует себя в безопасности.</li><li>Звуковое сопровождение должно быть как в сеттинге «Город», но более тихим и не таким насыщенным.</li></ul><h4 id="сеттинг-viii-остров" tabindex="-1"><a class="header-anchor" href="#сеттинг-viii-остров" aria-hidden="true">#</a> <em>Сеттинг VIII. Остров</em></h4><p>Когда Ройстон покинул Рона, ему снова позвонили на телефон. Рейн сообщает ему, что нужно избавиться от телефона, и используя поезд, паром, рыбацкую лодку, прибыть в течении трёх дней на самый дальний остров на севере (см. Таблицу 7-10).</p><p>На самом острове Рона встречает погибший Мервин Попплуэлл, и скрывшись в бункере из четырех комнат, за чашкой чая Рону рассказывают, что нужно закончить работу над системой безопасности «Август».</p><p>Поскольку команда не может защититься, на помощь, используя вертолет, прилетает Ройстон Медовая-Бабочка.</p><p><strong>Таблица 7-10.</strong> Сеттинг &quot;Остров&quot; в повести &quot;Август возвращается&quot;</p><table><thead><tr><th>Сеттинг</th><th>Место</th><th>Комната</th><th>Связанные комнаты</th></tr></thead><tbody><tr><td><em><strong>Остров</strong></em></td><td><em>Остров</em></td><td><em>Берег</em></td><td><em>Путь к бункеру А</em></td></tr><tr><td></td><td></td><td><em>Путь к бункеру А</em></td><td><em>Путь к бункеру Б</em></td></tr><tr><td></td><td></td><td><em>Путь к бункеру Б</em></td><td><em>Вход в бункер</em></td></tr><tr><td></td><td></td><td><em>Вход в бункер</em></td><td><em>Первая комната в бункере</em></td></tr><tr><td></td><td><em>Бункер</em></td><td><em>Первая комната в бункере</em></td><td><em>Вторая комната в бункере, Третья комната в бункере, Четвертая комната в бункере</em></td></tr><tr><td></td><td></td><td><em>Вторая комната в бункере</em></td><td><em>Первая комната в бункере, Третья комната в бункере, Четвертая комната в бункере</em></td></tr><tr><td></td><td></td><td><em>Третья комната в бункере</em></td><td><em>Первая комната в бункере, Вторая комната в бункере, Четвертая комната в бункере</em></td></tr><tr><td></td><td></td><td><em>Четвертая комната в бункере</em></td><td><em>Первая комната в бункере, Вторая комната в бункере, Третья комната в бункере</em></td></tr></tbody></table><p>Замечание к дизайну сеттинга <strong>Остров</strong>:</p><ul><li>Остров — это место, где главный герой приходит в себя и собирается с силами, все это должен отобразиться в сценарий. После напряженного начала на этом этапе игры игрок чувствует себя непринужденно.</li><li>Так как события происходят на дальнем севере мы должны слышать звуки океана и сильного ветра.</li></ul><h4 id="сеттинг-ix-океан" tabindex="-1"><a class="header-anchor" href="#сеттинг-ix-океан" aria-hidden="true">#</a> <em>Сеттинг IX. Океан</em></h4><p>Спустя несколько дней к Рону прибывает Рейн и предлагает покинуть бункер, так как в резиденции президента произошло чрезвычайное происшествие. Рон принимает предложение. После чего они покидают остров, погрузившись на судно на воздушной подушке. Хоть это и короткая сцена, но из-за эпизода с нападением на корабль, очень напряженная (см. Таблицу 7-11).</p><p><strong>Таблица 7-11.</strong> Сеттинг &quot;Остров&quot; в повести &quot;Август возвращается&quot;</p><table><thead><tr><th>Сеттинг</th><th>Место</th><th>Комната</th><th>Связанные комнаты</th></tr></thead><tbody><tr><td><em><strong>Океан</strong></em></td><td><em>Судно</em></td><td><em>Палуба</em></td><td><em>Рубка</em></td></tr><tr><td></td><td></td><td><em>Рубка</em></td><td><em>Палуба</em></td></tr><tr><td></td><td><em>Спасательный вертолёт</em></td><td><em>Рубка</em></td><td><em>Палуба</em></td></tr><tr><td></td><td></td><td><em>Палуба</em></td><td><em>Рубка</em></td></tr></tbody></table><p>Замечание к дизайну сеттинга <strong>Океан</strong>:</p><ul><li>Тон написание должен вызывать чувство динамики и опасности.</li><li>Звук соответствует тону письма. Мы слышим двигатель судна, тяжелые шаги, металлическое эхо, грохот дверей, шум волн океана, и в итоге нарастающий звук вертолета.</li></ul><h4 id="сеттинг-x-север" tabindex="-1"><a class="header-anchor" href="#сеттинг-x-север" aria-hidden="true">#</a> <em>Сеттинг X. Север</em></h4><p>Рон и его друзья покинули остров и высадились на побережье материка, где их уже ждала машина, чтобы отвезти в аэропорт. Используя частный самолёт, они вылетают в столицу. Во время полёта они узнают про ужасные события в резиденции президента (см. Таблицу 7-12).</p><p><strong>Таблица 7-12.</strong> Сеттинг &quot;Север&quot; в повести &quot;Август возвращается&quot;</p><table><thead><tr><th>Сеттинг</th><th>Место</th><th>Комната</th><th>Связанные комнаты</th></tr></thead><tbody><tr><td><em><strong>Север</strong></em></td><td><em>Побережье</em></td><td><em>Побережье</em></td><td><em>Автомобиль в аэропорт</em></td></tr><tr><td></td><td><em>Аэропорт</em></td><td><em>Автомобиль в аэропорт</em></td><td><em>Зона аэропорта А</em></td></tr><tr><td></td><td></td><td><em>Зона аэропорта А</em></td><td><em>Зона аэропорта Б, Автомобиль в аэропорт</em></td></tr><tr><td></td><td></td><td><em>Зона аэропорта Б</em></td><td><em>Самолет в столицу</em></td></tr><tr><td></td><td></td><td><em>Самолет в столицу</em></td><td><em>Нет</em></td></tr></tbody></table><p>Замечания к дизайну сеттинга <strong>Север</strong>:</p><ul><li>Текст в этом сеттинге должен спокойно вести повествование, так как большую часть врагов погибло в предыдущем сеттинге. Однако, происшествие в резиденции может поставить крест на миссии.</li><li>Звуковой фон должен успокаивать игрока. Можно добавить звуки поездки с берега в аэропорт, звук двигателя самолёта.</li></ul><h4 id="сеттинг-xi-город" tabindex="-1"><a class="header-anchor" href="#сеттинг-xi-город" aria-hidden="true">#</a> <em>Сеттинг XI. Город</em></h4><p>Рон и его друзья, прибыв в столицу, немедленно направляются в резиденцию президента (см. Таблицу 7-13). Где Рон встречает Клер и человека в комбинезоне. Им сообщают, что премьер-министр похищен, и чтобы его освободить Рон должен передать исходный код системы безопасности «Августа».</p><p>Рон соглашается с выдвинутыми условиями, но ухитряется обмануть врагов, подсунув им исправную систему безопасности, а спецназ в свою очередь обезвреживает всех сотрудников «Фракции».</p><p>В конце концов Рон оказывается дома, а когда возвращается офис, узнает, что он получает должность, которую раньше занимал Ройстон. Конец!</p><p><strong>Таблица 7-13.</strong> Сеттинг &quot;Город&quot; в повести &quot;Август возвращается&quot;</p><table><thead><tr><th>Сеттинг</th><th>Место</th><th>Комната</th><th>Связанные комнаты</th></tr></thead><tbody><tr><td><em><strong>Город</strong></em></td><td><em>Аэропорт</em></td><td><em>Прибытие</em></td><td><em>Машине в резиденцию президента</em></td></tr><tr><td></td><td></td><td><em>Машине в резиденцию президента</em></td><td><em>Лестница</em></td></tr><tr><td></td><td><em>Резиденция президента</em></td><td><em>Лестница</em></td><td><em>Парадный вход</em></td></tr><tr><td></td><td></td><td><em>Парадный вход</em></td><td><em>Зал, Лестница</em></td></tr><tr><td></td><td></td><td><em>Зал</em></td><td><em>Парадный вход</em></td></tr><tr><td></td><td><em>Дом Рона</em></td><td><em>Приемная</em></td><td><em>Спальня</em></td></tr><tr><td></td><td></td><td><em>Спальня</em></td><td><em>Приемная, Балкон</em></td></tr><tr><td></td><td></td><td><em>Балкон</em></td><td><em>Спальня</em></td></tr></tbody></table><p>Замечание к дизайну сеттинга <strong>Город</strong>:</p><ul><li>Тон письма должен быть сухим, холодным. Он должен показать в действиях главного героя твёрдость и расчетливость. Рон за нескольких недель своих приключений пережил многое, стал мудрее.</li><li>Что касается звука, находясь в столице — это шум города, а попав в резиденцию президента – это тихая атмосфера. Так же мы должны выделить динамические сцены и сцены, в которых нужно принимать судьбоносные решения.</li></ul><h4 id="сеттинг-xii-новыи-офис" tabindex="-1"><a class="header-anchor" href="#сеттинг-xii-новыи-офис" aria-hidden="true">#</a> <em>Сеттинг XII. Новый офис</em></h4><p>Рон возвращается на работу. Офис отремонтирован за время его отсутствия, стоят новые рабочие столы и компьютеры (см. Таблицу 7-14).</p><p>Появляется Ройстон и говорит, что уходит на пенсию. Он предлагает Рону занять его место в отделе технической поддержки. Рон не задумываясь соглашается, понимая, что в будущем его ожидают новые приключения.</p><p><strong>Таблица 7-14.</strong> Сеттинг &quot;Новый офис&quot; в повести &quot;Август возвращается&quot;</p><table><thead><tr><th>Сеттинг</th><th>Место</th><th>Комната</th><th>Связанные комнаты</th></tr></thead><tbody><tr><td><em><strong>Новый офис</strong></em></td><td><em>Новое рабочее место Рона</em></td><td><em>Рабочий стол Рона</em></td><td><em>Зона с питьевым фонтанчиком, Рабочий стол Ройстона</em></td></tr><tr><td></td><td></td><td><em>Соседний рабочий стол</em></td><td><em>Новое рабочее место Рона</em></td></tr><tr><td></td><td><em>Помещение, где храниться сотовый телефон</em></td><td><em>Рабочий стол Ройстона (Новое рабочее место Рона)</em></td><td><em>Новое рабочее место Рона, Хранилище документов</em></td></tr><tr><td></td><td></td><td><em>Хранилище документов</em></td><td><em>Рабочий стол Ройстона</em></td></tr></tbody></table><p>Замечание к дизайну сеттинга <strong>Новый офис</strong>:</p><ul><li>Текст должен вызывать чувство триумфа и оптимизма.</li><li>В этом сеттинге мы должны слышать спокойную рабочую обстановку в офисе.</li></ul><h2 id="часть-i-начало-август-возвращается-в-ren-py" tabindex="-1"><a class="header-anchor" href="#часть-i-начало-август-возвращается-в-ren-py" aria-hidden="true">#</a> Часть I: Начало &quot;Август возвращается&quot; в Ren’Py</h2><p>Теперь пришло время приступить к написанию кода. &quot;Август возвращается&quot; имеет 61 комнату, приблизительно от 2000 до 2500 слов, и этого достаточно чтобы познакомится с процессом разработки игр в Ren’Py.</p><h3 id="создание-проекта" tabindex="-1"><a class="header-anchor" href="#создание-проекта" aria-hidden="true">#</a> Создание проекта</h3><p>На Лаунчере Ren’Py нажмите <em>&quot;Добавить новый проект&quot;</em>. У вас запросят указать имя проекта на латинице, в нашем случае — это <em>&quot;Avgust Vozvrashaetsya&quot;</em>. Затем выбираем разрешение для проекта, по умолчанию это 1920x1080 (Full HD) и нажимаем <em>&quot;Продолжить&quot;</em>. На следующем шаге задаём <em>цветовую схему</em> игры. Если возникнет потребность данные параметры можно будет изменить. После нажатия <em>&quot;Продолжить&quot;</em>, Ren’Py выполнить процесс создания проекта и вернёт вас на главный экран лаунчера.</p><p>В левой части в разделе <em>&quot;Проекты&quot;</em>, выберите &quot;Avgust Vozvrashaetsya&quot;. Далее в разделе <em>&quot;Редактировать файл&quot;</em> нажмите на файле <em>script.rpy</em>. Он откроется в текстовом редакторе. Это основной скрипт игры. На протяжении данной главы мы в основном будем работать только с ним.</p><p>Нужно отметить, что скрипты Ren’Py очень чувствительны к пробелам и синтаксису. Например, некоторые текстовые редакторы выполняют авто форматирование и заменяют <em>обычные кавычки</em> на <em>изогнутые</em>. Это приводит к тому, что Ren’Py не может выполнить скрипт. Желательно отключите авто форматирование в вашем текстовом редакторе или используйте IDE (интегрированную среду разработки).</p><h3 id="настроика-персонажеи" tabindex="-1"><a class="header-anchor" href="#настроика-персонажеи" aria-hidden="true">#</a> Настройка персонажей</h3><p>По умолчанию в файле сценария присутствует персонаж Эйлин. Мы его заменим на свой список персонажей указав имя и цвет диалога.</p><p>Для цвета в Ren’Py используется шестнадцатеричный формат, как и в HTML. В котором первые две цифры это красный цвет, следующие две – зелёный, а последние две – синий. Диапазон значений состоит от 0 до 9, потом от A до F. Например, красный цвет имеет значение: <em>#FF0000</em>, а черный: <em>#000000</em>.</p><p>Откройте файл script.rpy и найдите следующую строку:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>define e <span class="token operator">=</span> Character<span class="token punctuation">(</span><span class="token string">&#39;Эйлин&#39;</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&quot;#c8ffc8&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>И вместо неё вставьте следующий код:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>define reg <span class="token operator">=</span> Character<span class="token punctuation">(</span><span class="token string">&quot;Рон Легион-Смерти&quot;</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&quot;#0099BB&quot;</span><span class="token punctuation">)</span>
define merv <span class="token operator">=</span> Character<span class="token punctuation">(</span><span class="token string">&quot;Мервин Попплуэлл&quot;</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&quot;#007799&quot;</span><span class="token punctuation">)</span>
define roy <span class="token operator">=</span> Character<span class="token punctuation">(</span><span class="token string">&quot;Ройстон Медовая-Бабочка&quot;</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&quot;#0044CC&quot;</span><span class="token punctuation">)</span>
define rai <span class="token operator">=</span> Character<span class="token punctuation">(</span><span class="token string">&quot;Рейн&quot;</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&quot;#8888EE&quot;</span><span class="token punctuation">)</span>
define cla <span class="token operator">=</span> Character<span class="token punctuation">(</span><span class="token string">&quot;Клэр&quot;</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&quot;#AA1100&quot;</span><span class="token punctuation">)</span>
define man <span class="token operator">=</span> Character<span class="token punctuation">(</span><span class="token string">&quot;Человек в комбинезоне&quot;</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&quot;#EE1100&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Как видим для каждого персонажа задаётся имя и цвет диалога, а сам персонаж в свою очередь присваивается константе виде сокращенного имени. Для различия главному герою и его команде задаются цвета синих оттенков, а стороне антагониста оттенки красного цвета.</p><h3 id="переходы" tabindex="-1"><a class="header-anchor" href="#переходы" aria-hidden="true">#</a> Переходы</h3><p>Ранее в этой книге мы уже познакомились со стандартными переходами в Ren’Py (например, <em>затухание</em>, <em>растворение</em>, <em>пикселизация</em>), но иногда нужно создать переходы с индивидуальными параметрами. Добавим два таких перехода в скрипт игры. Первый это <em>&quot;slideleft&quot;</em> - слайдер в лево, который выполняет переход в течении двух секунд. Второй <em>&quot;fireflash&quot;</em> - вспышка, который представляет собой переход к ярко-оранжевому цвету и обратно. Он будет использоваться для сцен пожара.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>define slideleft <span class="token operator">=</span> CropMove<span class="token punctuation">(</span><span class="token number">2.0</span><span class="token punctuation">,</span> <span class="token string">&quot;slideleft&quot;</span><span class="token punctuation">)</span>
define fireflash <span class="token operator">=</span> Fade<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> color<span class="token operator">=</span><span class="token string">&quot;#e40&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="изображения-для-персонажеи" tabindex="-1"><a class="header-anchor" href="#изображения-для-персонажеи" aria-hidden="true">#</a> Изображения для персонажей</h3><p>На лаунчере Ren’Py в раздел <em>&quot;Открыть папку&quot;</em> есть ссылка <em>images</em>. После её нажатия откроется каталог с изображениями проекта.</p><p>Чтобы назначить изображение персонажу, нужно выполнить следующие правило: имя файла с изображением должно совпадать с именем константы, в которой храниться персонаж. Например, в нашем случае нужно добавить изображения с именами <em>reg.png</em>, <em>merv.png</em>, <em>roy.png</em> и так далее. Так же файл с именем <em>Reg.png</em> соответствует <em>reg.png</em> и будет присвоен персонажу, но файл с именем <em>Reginald.png</em> уже не подойдёт.</p><p>Нужно не забывать, что Ren’Py для персонажей использует формат изображения PNG и WEBP, а для фона JPG, PNG и WEBP.</p><h3 id="подготовка-ассетов" tabindex="-1"><a class="header-anchor" href="#подготовка-ассетов" aria-hidden="true">#</a> Подготовка ассетов</h3><p>Хоть Ren’Py на основе имени автоматически подгружает изображения персонажей, то остальные аудиовизуальные ресурсы нужно явно определить в файле скрипта. Как мы увидим позже большая часть ресурсов в создаваемой игре это фоновые изображения в формате jpg, которым присвоены соответствующие имена.</p><p>Единственным исключением является персонаж Рейн. В определённый момент игры её лицо становится серьёзным. Для этого мы дополнительно загружаем изображение выполнив следующую команду:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>image rai serious <span class="token operator">=</span> <span class="token string">&quot;rai_serious.png&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Теперь для вывода персонажа Рейн с серьезным выражением лица нужно выполнить команду <em>rai serious &quot;Да, я серьезно!&quot;</em>. На основе данного приёма сделайте своих персонажей более живыми используя как можно больше изображений с различными эмоциями лица.</p><p>Помните, вы можете использовать оператор image для определения как основного портрета персонажа (например, _image jimmy = &quot;jimmy.png&quot;), так и для дополнительных (например, <em>image jimmy happy = &quot;jimmyhappy.png&quot;</em>). Однако перед этим вам нужно определить персонажа (например, <em>define jimmy = Character(&quot;Jimmy&quot;)</em>), что мы и сделали в главе <em>&quot;Настройка персонажей&quot;</em>.</p><p>Теперь давайте определим ассеты для офиса, которые можно скрывать и показывать при помощи команд <em>hide</em> и <em>show</em> (например, чтобы показать изображение офиса <em>office1</em>.jpg, нужно выполнить команду: <em>show office</em>, а чтобы скрыть выполнить команду: <em>hide office</em>)</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>image office <span class="token operator">=</span> <span class="token string">&quot;office1.jpg&quot;</span>
image office2 <span class="token operator">=</span> <span class="token string">&quot;office2.jpg&quot;</span>
image email <span class="token operator">=</span> <span class="token string">&quot;email.jpg&quot;</span>
image topfloor <span class="token operator">=</span> <span class="token string">&quot;topfloor.jpg&quot;</span>
image cooler <span class="token operator">=</span> <span class="token string">&quot;cooler.jpg&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Далее назначим изображения для сцен города, парка, станции и т.д.:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>image london <span class="token operator">=</span> <span class="token string">&quot;london.jpg&quot;</span>
image london2 <span class="token operator">=</span> <span class="token string">&quot;london2.jpg&quot;</span>
image park <span class="token operator">=</span> <span class="token string">&quot;park1.jpg&quot;</span>
image park2 <span class="token operator">=</span> <span class="token string">&quot;park2.jpg&quot;</span>

image alley <span class="token operator">=</span> <span class="token string">&quot;alley.jpg&quot;</span>
image door <span class="token operator">=</span> <span class="token string">&quot;door.jpg&quot;</span>
image window <span class="token operator">=</span> <span class="token string">&quot;window.jpg&quot;</span>

image station <span class="token operator">=</span> <span class="token string">&quot;station.jpg&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>В конце, определим четыре изображения для огня, которые будут отображаться в случайном порядке, чтобы показать хаос пожара.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>image fire1 <span class="token operator">=</span> <span class="token string">&quot;fire1.jpg&quot;</span>
image fire2 <span class="token operator">=</span> <span class="token string">&quot;fire2.jpg&quot;</span>
image fire3 <span class="token operator">=</span> <span class="token string">&quot;fire3.jpg&quot;</span>
image fire4 <span class="token operator">=</span> <span class="token string">&quot;fire4.jpg&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="в-бои" tabindex="-1"><a class="header-anchor" href="#в-бои" aria-hidden="true">#</a> В бой!</h3><p>Теперь мы приступим к написанию основного сценария. Укажем кто мы и чем занимаемся. Для этого отобразим портрет главного героя в точке с координатами xpos: 0.7 и ypos: 0.2, где значение 0.0 – это левый край, а 1.0 правый. Так же применим ранее определённый эффект скольжения.</p><p>Но сначала зададим следующие переменные, которыми воспользуемся позже.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Начало игры</span>

label start<span class="token punctuation">:</span>

<span class="token comment"># Определяем переменные</span>

    $ sips <span class="token operator">=</span> <span class="token number">0</span>
    $ time <span class="token operator">=</span> <span class="token number">0</span>
    $ items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    $ dvd_found <span class="token operator">=</span> <span class="token boolean">False</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>При написании скрипта, не забывайте корректно задавать отступы для блоков кода.</p><p>Далее вставляем пустую строку и прописываем щелчки мыши:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    play sound <span class="token punctuation">[</span> <span class="token string">&quot;&lt;silence 1.5&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;sounds/mouse_clicks.wav&quot;</span> <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Данная строка найдет в каталоге со звуками файл &quot;sounds/mouse_clicks.wav&quot; и воспроизведёт его с паузой в 1,5 секунды.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    show office1
    <span class="token keyword">with</span> slideleft
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Теперь отобразим фон офиса с именем <em>office1</em> используя ранее определённый переход <em>slideleft</em>. Эти две строки должны иметь одинаковый отступ иначе при запуске игры возникнет ошибка. Чтобы с отступами было меньше проблем, то лучше использовать более продвинутые текстовый редактор, которые позволяет делать отступы при помощи кнопки Tab.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    show reg<span class="token punctuation">:</span>
        xalign <span class="token number">0.0</span>
        xpos <span class="token number">0.7</span>
        ypos <span class="token number">0.2</span>
    <span class="token keyword">with</span> easeinleft

    <span class="token string">&quot;Рон Легион-Смерти, правительственный эксперт по кибербезопасности, бездельничал за своим рабочим столом.&quot;</span>

    <span class="token string">&quot;Вместо работы над проектом, он смотрел смешные видеоролики в интернете.&quot;</span>

    <span class="token string">&quot;Рон находился в депрессии из-за смерти своего лучшего и единственного друга по офису Мервина Попплуэлла.&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>В результате после запуска игры будет отображено стартовое меню. После нажатия <em>&quot;Начать&quot;</em> начнётся повествование истории, появится изображение офиса и портрет главного героя. Если после нажатия <em>&quot;Запустить проект&quot;</em> и в игре не появились внесённые изменения, то вероятно не был сохранен файл сценария игры.</p><h3 id="комментирование-кода" tabindex="-1"><a class="header-anchor" href="#комментирование-кода" aria-hidden="true">#</a> Комментирование кода</h3><p>Хорошим тоном написания сценария – это его комментирование, особенно когда вы работаете в большой команде. В Ren’Py – это делается с помощью символа хэштега (#).</p><p>Например, добавьте данный комментарий перед появлением портрета главного героя с текстом &quot;Рон Легион-Смерти, правительственный…&quot;.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Комната 1: Рабочий стол Рона</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Хоть Ren’Py имеет строгие правила к отступам, но они не распространяется на комментарии, которые не являются частью кода.</p><h3 id="ваше-первое-меню" tabindex="-1"><a class="header-anchor" href="#ваше-первое-меню" aria-hidden="true">#</a> Ваше первое меню</h3><p>Теперь мы при помощи меню реализуем взаимодействие пользователя с игрой.</p><p>Однако сперва для работы меню нужно определить переменные после метки &quot;start&quot;. Чтобы это сделать используйте следующий синтаксис: <em>$ variable_name = 0</em>, где <em>variable_name</em> – имя переменной.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>label start<span class="token punctuation">:</span>
    $ sips <span class="token operator">=</span> <span class="token number">0</span>
    $ time <span class="token operator">=</span> <span class="token number">0</span>
    $ items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Как видим, инициализируется три переменных: <em>sips</em> – которая используется для подсчета количества сделанных глотков воды главным героем, переменная <em>time</em> будет подсчитывать количество проведённого времени, а переменная <em>items</em>, которая является пустым массивом, будет хранить в себе инвентарь. Однако Ren’Py не имеет массивов как таковых, вместо этого он использует <em>списки</em>.</p><p>Добавим следующий код в конец основного скрипта:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    menu deskaction<span class="token punctuation">:</span>
     <span class="token string">&quot;Выбери действие&quot;</span>
     <span class="token string">&quot;Посетить зону с питьевым фонтанчиком&quot;</span><span class="token punctuation">:</span>
         $ time <span class="token operator">+=</span> <span class="token number">1</span>
         stop sound fadeout <span class="token number">1.0</span>
         hide office1
         show cooler
         <span class="token keyword">with</span> dissolve
         jump drinkingfountain
         
     <span class="token string">&quot;Осмотреть рабочий стол коллеги&quot;</span><span class="token punctuation">:</span>
         $ time <span class="token operator">+=</span> <span class="token number">1</span>
         stop sound fadeout <span class="token number">1.0</span>
         hide office1
         show office2
         <span class="token keyword">with</span> dissolve
         jump neighboringdesk

    menu drinkingfountain<span class="token punctuation">:</span>
             <span class="token string">&quot;Выбери действие&quot;</span>
             <span class="token string">&quot;Вернуться к своему рабочему столу&quot;</span><span class="token punctuation">:</span>
                 jump deskaction
                 
             <span class="token string">&quot;Выпить&quot;</span><span class="token punctuation">:</span>
                 $ sips <span class="token operator">+=</span> <span class="token number">1</span>
                 
                 <span class="token string">&quot;Сделано глотков [sips].&quot;</span>
                 jump deskaction

    label neighboringdesk<span class="token punctuation">:</span>
           <span class="token keyword">if</span> time<span class="token operator">&gt;</span><span class="token number">3</span><span class="token punctuation">:</span>
               jump emailreceived

           <span class="token keyword">if</span> time<span class="token operator">&lt;=</span><span class="token number">2</span><span class="token punctuation">:</span>
               <span class="token string">&quot;Коллег ушел рано. Его рабочий стол пуст.&quot;</span>
               hide office2
               show office1
               <span class="token keyword">with</span> dissolve
               show reg
               jump deskaction
           <span class="token keyword">else</span><span class="token punctuation">:</span>
               <span class="token string">&quot;Соседний рабочий стол убран.&quot;</span>
               hide office2
               show office1
               <span class="token keyword">with</span> dissolve
               show reg
               jump deskaction
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>В данном коде для создания меню используются такие ключевые слова как <em>menu</em>, <em>jump</em> и <em>label</em>. Каждое меню должно иметь метку, в нашем случае это <em>deskaction</em>. А сочетание слов jump (прыжок) и label (метка) позволит выполнит переход по самому меню, и переход в нужную точку сценария. Так же обратите внимание, как используется знак двоеточия в конце меток и пунктов меню.</p><p>При выборе пункта меню «Выпить», над переменной выполняется операция +=, а потом она выводится в строке через квадратные скобки. Таким образом мы подсчитываем сколько Рон сделал глотков воды пока находился возле фонтанчика с водой. Каждое такое действие увеличивает количество глотков на единицу, но если нужно сделать 60 глотков, то строка имела бы вид <em>$ sips += 60</em>.</p><h3 id="использование-условного-оператора" tabindex="-1"><a class="header-anchor" href="#использование-условного-оператора" aria-hidden="true">#</a> Использование условного оператора</h3><p>Благодаря условному оператору <em>if</em>, <em>elif</em> и <em>else</em> игру можно сделать более разнообразной и интересной. Для этого замените код от строки <em>menu drinkingfountain:</em> до <em>jump deskaction</em> на следующий:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    menu drinkingfountain<span class="token punctuation">:</span>
             <span class="token string">&quot;Выбери действие&quot;</span>

             <span class="token string">&quot;Вернуться к своему рабочему столу&quot;</span><span class="token punctuation">:</span>
                 jump deskaction

             <span class="token string">&quot;Выпить&quot;</span><span class="token punctuation">:</span>
                 $ sips <span class="token operator">+=</span> <span class="token number">1</span>
                 play sound <span class="token string">&quot;sounds/gulp.wav&quot;</span>

                 <span class="token keyword">if</span> sips<span class="token operator">&lt;</span><span class="token number">3</span><span class="token punctuation">:</span>
                     <span class="token string">&quot;Сделано глотков [sips].&quot;</span>
                     show office1
                     <span class="token keyword">with</span> dissolve
                     jump deskaction
                 <span class="token keyword">elif</span> sips<span class="token operator">==</span><span class="token number">3</span><span class="token punctuation">:</span>
                     <span class="token string">&quot;После [sips] глотков, вы утолили жажду.&quot;</span>
                     show office1
                     <span class="token keyword">with</span> dissolve
                     jump deskaction
                 <span class="token keyword">else</span><span class="token punctuation">:</span>
                     <span class="token string">&quot;Пропало желание пить.&quot;</span>
                     show office1
                     <span class="token keyword">with</span> dissolve
                     jump deskaction
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Как видим благодаря условному оператору мы проверяем переменную <em>sips</em> и в зависимости от количества глотков сообщаем, что Рон утолил жажду. Условный оператор состоит из самого условия, которое прописывается после слова <em>if</em>, ключевого слова <em>elif</em> (если ещё), который используется для проверки дополнительных условий, и слова <em>else</em>, код после которого будет выполняться если ни одно из условий не выполнено.</p><p>Теперь давайте добавим еще условие, на основе переменной <em>time</em>. Для этого внесём изменения в код меню <em>deskaction</em>:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>     <span class="token string">&quot;Посетить зону с питьевым фонтанчиком&quot;</span><span class="token punctuation">:</span>
         $ time <span class="token operator">+=</span> <span class="token number">1</span>
         jump drinkingfountain
         
     <span class="token string">&quot;Осмотреть рабочий стол коллеги&quot;</span><span class="token punctuation">:</span>
         $ time <span class="token operator">+=</span> <span class="token number">1</span>
         jump neighboringdesk
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Далее добавим условный оператор после строки <em>label neighboringdesk</em>:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>           <span class="token keyword">if</span> time<span class="token operator">&gt;</span><span class="token number">3</span><span class="token punctuation">:</span>
               jump emailreceived
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Этот код просто проверяет количество выполненных действий в игре, и когда число больше трёх, мы переходим к метке <em>emailreceived</em>.</p><p>Теперь сменим декорации. Добавьте следующие строки кода после <em>jump deskaction</em>:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    <span class="token comment"># Время электронной почты</span>
    label emailreceived<span class="token punctuation">:</span>
        scene email
        <span class="token keyword">with</span> dissolve
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>При помощи команды scene очищаем сцену от всех отображаемых объектов (т. е. фон и спрайты персонажей), и взамен показываем новый фон. После чего уведомляем игрока звуком колокольчика о получении электронного письма.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>        play sound <span class="token string">&quot;sounds/email.wav&quot;</span>

        <span class="token string">&quot;Рон вернулся к своему рабочему столу, и замечает, что ему пришло письмо.&quot;</span>
        <span class="token string">&quot;Оно содержало следующее сообщение: \\&quot;Встретимся сегодня в семь вечера в Парке возле Aрки. Никому не говори об этой встречи …\\&quot;&quot;</span>
        <span class="token string">&quot;... и подписано Мервин Попплуэлл.&quot;</span>
        <span class="token string">&quot;Это какая-то шутка. Мервина же больше нет.&quot;</span>
        <span class="token string">&quot;Рон решает позвонить Ройстону сотруднику из технической поддержки, чтобы узнать, кто прислал это письмо.&quot;</span>
        <span class="token string">&quot;После телефонного звонка, выясняется, что письмо настоящее, и Ройстон просит Рона подняться на верхний этаж.&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Согласно повествованию, следующее место действия – это верхний этаж. В этой сцене так же используется условный оператор. Будет выполнена проверка переменной sips, чтобы узнать, немного ли выпил игрок воды, и если да, то отобразить шутливое сообщения.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>label topfloor<span class="token punctuation">:</span>

    scene topfloor
    <span class="token keyword">with</span> dissolve

    <span class="token comment"># Показываем изображение телефона</span>
    show phone<span class="token punctuation">:</span>
        xalign <span class="token number">0.0</span>
        xpos <span class="token number">0.5</span>
        ypos <span class="token number">0.18</span>
    <span class="token keyword">with</span> easeinleft
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Кроме изображений фона и персонажей Ren’Py может отобразить любой другой спрайт. Если посмотреть пример предыдущего кода, то сценарий выводит спрайт мобильного телефона используя эффект <em>easeinleft</em>. Далее отображается диалог, а затем телефон исчезает с эффектом <em>easeoutright</em>.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    <span class="token string">&quot;Там Рон находите мобильный телефон 80-х годов, и забирает его с собой.&quot;</span>

    hide phone
    <span class="token keyword">with</span> easeoutright
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Теперь реализуем инвентарь. Используя метод <em>append</em>, добавим первый элемент инвентаря - мобильный телефон, и подадим специальный сигнал игроку.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    play sound <span class="token string">&quot;sounds/sound.wav&quot;</span>
    $ items<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&quot;специальный телефон&quot;</span><span class="token punctuation">)</span>

    scene london
    <span class="token keyword">with</span> dissolve

   <span class="token comment"># Если игрок выпил слишком много воды, показываем сообщение</span>
    <span class="token keyword">if</span> sips <span class="token operator">&gt;=</span> <span class="token number">3</span><span class="token punctuation">:</span> 
        <span class="token string">&quot;Нужно сходить в туалет.&quot;</span>
    <span class="token string">&quot;Он всё же решается на встречу, предложенную в электронном письме.&quot;</span>

   <span class="token comment"># Парк</span>
    label hydepark<span class="token punctuation">:</span>
    play music <span class="token punctuation">[</span> <span class="token string">&quot;sounds/park.mp3&quot;</span> <span class="token punctuation">]</span> fadein <span class="token number">10.0</span> loop
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Возможно, вы помните Ren’Py по умолчанию имеет три звуковых канала: <em>sound</em>, <em>music</em>, и <em>voice</em>. Как видим, предыдущие строки кода демонстрируют нам использование музыкального канала. Мы циклично (<em>loop</em>) воспроизводим с нарастанием (<em>fadein</em>) в 10.0 секунд фоновые звуки парка.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    scene park
    <span class="token keyword">with</span> dissolve

    <span class="token string">&quot;Парк находился всего в нескольких минутах ходьбы от офиса. Идя по дороге к арке парка&quot;</span>
    $ items<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&quot;монета&quot;</span><span class="token punctuation">)</span>  

    <span class="token comment"># Сортируем список элементов</span>
    $ items<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>

    play sound <span class="token string">&quot;sounds/sound.wav&quot;</span>
    <span class="token string">&quot;Рон замечаете монету в земле. Он поднял ее и положил в карман.&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Для сохранения инвентаря мы использовали пустую переменную <em>items</em> и походу игры используя метод <em>.append</em> добавили виде строки два предмета <em>монету</em> и <em>специальный телефон</em>. Как использовать данный список мы узнаем позже, но самый простой пример — это проверять наличие ключа у игрока для открытия двери.</p><p>Чтобы упорядочить инвентарь в списке отсортируем его в алфавитном порядке при помощи метода <em>sort</em>.</p><h3 id="настроика-скорости-текста" tabindex="-1"><a class="header-anchor" href="#настроика-скорости-текста" aria-hidden="true">#</a> Настройка скорости текста</h3><p>По умолчанию Ren’Py показывает диалог персонажа одним блоком. Если вы хотите использовать классический эффект печатной машинки, нужно открыть файл options.rpy и найти строку <em>default preferences.text_cps = 0</em>. Далее, ноль заменить на 20, после чего сохранить файл и перезапустить игру.</p><h3 id="обновляем-систему-инвентаря" tabindex="-1"><a class="header-anchor" href="#обновляем-систему-инвентаря" aria-hidden="true">#</a> Обновляем систему инвентаря</h3><p>Чтобы игрок не записывал найденные вещи на бумаге, реализуем интерфейс для отображения инвентаря. Добавим следующий код в скрипт, где оператор <em>init</em> позволит его выполнить в первую очередь.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>init python<span class="token punctuation">:</span>
    items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">def</span> <span class="token function">display_items_overlay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>items<span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">:</span>
            inventory <span class="token operator">=</span> <span class="token string">&quot;Инвентарь: &quot;</span>
            <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>items<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                item_name <span class="token operator">=</span> items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
                     inventory <span class="token operator">+=</span> <span class="token string">&quot;, &quot;</span>
                inventory <span class="token operator">+=</span> item_name
            ui<span class="token punctuation">.</span>frame<span class="token punctuation">(</span><span class="token punctuation">)</span>
            ui<span class="token punctuation">.</span>text<span class="token punctuation">(</span>inventory<span class="token punctuation">)</span>
    config<span class="token punctuation">.</span>overlay_functions<span class="token punctuation">.</span>append<span class="token punctuation">(</span>display_items_overlay<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>В результате код выведет список предметов инвентаря в верхнем левом углу экрана.</p><p>В коде при помощи оператора <em>python</em> указывается, что далее идут строки, которые нужно интерпретировать как чистый Python. То есть язык, на котором написан сам Ren’Py. После чего определяем список с названием <em>items</em>. Далее проверяем если <em>items</em> содержит хоть один элемент, то выводим содержимое через запятую. Данный процесс будет выполниться в фоновом режиме на протяжении всей игры.</p><p>На будущее, для манипуляции с элементами в списке существуют различные методы, с которыми вы можете ознакомиться в Таблице 7-15.</p><p><strong>Таблица 7-15.</strong> Методы для манипуляции со списками в Python и Ren’Py</p><table><thead><tr><th>Метод</th><th>Описание</th><th>Пример</th></tr></thead><tbody><tr><td><em>append</em></td><td>Добавить элемент в список</td><td>fruit.append(&quot;apple&quot;)</td></tr><tr><td><em>remove</em></td><td>Удалить элемент из списка</td><td>pocket.remove(&quot;pie&quot;)</td></tr><tr><td><em>insert</em></td><td>Вставляет элемент в заданную позицию</td><td>inventory.insert(2, &quot;deodorant&quot;)</td></tr><tr><td><em>reverse</em></td><td>В списке выставляет элементы в обратном порядке</td><td>names.reverse()</td></tr><tr><td><em>count</em></td><td>Подсчитывает количество элементов, найденных в списке</td><td>fruit.count(&quot;Pear&quot;)</td></tr><tr><td><em>sort</em></td><td>Сортирует элементы в алфавитном порядке</td><td>last_names.sort()</td></tr><tr><td><em>clear</em></td><td>Удаляет все элементы из списка</td><td>inventory.clear()</td></tr><tr><td><em>len</em></td><td>Возвращает количество элементов в списке</td><td>if len(items)&gt;0:<br> &quot;Hooray!&quot;</td></tr></tbody></table><p>Продолжим создавать игру добавив следующий код после строки <em>$ items.append(&quot;coin&quot;)</em>:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    scene park2
    <span class="token keyword">with</span> dissolve

    <span class="token string">&quot;Возле Арки парка никого не было.&quot;</span>
    <span class="token string">&quot;Рон довольно долго ждал, но никто так и не пришел.&quot;</span>
    <span class="token string">&quot;Разочаровавшись, он отправился домой.&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Теперь продолжим сценарий драматической сценой - пожаром в офисе:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    <span class="token comment"># Офис Инферно</span>
    label inferno<span class="token punctuation">:</span>

    <span class="token string">&quot;На обратной дороге Рон замечает, что горит его офис.&quot;</span>
    reg <span class="token string">&quot;Если бы я задержался немного на работе перед тем, как пойти в парк, то может быть предотвратил пожар.&quot;</span>
    play sound <span class="token string">&quot;sounds/phone.wav&quot;</span> loop

    <span class="token string">&quot;В этот момент из портфеля послышался звук звонящего телефон. Взволнованный Рон с трудом достаёт его и отвечает на звонок.&quot;</span>

    stop sound
    show roy<span class="token punctuation">:</span>
        xalign <span class="token number">0.0</span>
        xpos <span class="token number">0.2</span>
        ypos <span class="token number">0.2</span>
    <span class="token keyword">with</span> easeinright

    roy <span class="token string">&quot;Спаси розовый DVD-диск. У тебя осталось около десяти минут, прежде чем его поглотит огонь.&quot;</span>

    hide roy
    play sound <span class="token string">&quot;sounds/siren.wav&quot;</span> fadein <span class="token number">5.0</span> fadeout <span class="token number">5.0</span>

    <span class="token string">&quot;Речь шла про систему безопасности «Август», которую должны интегрировать во все государственные службы страны. &quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="добавляем-функции" tabindex="-1"><a class="header-anchor" href="#добавляем-функции" aria-hidden="true">#</a> Добавляем функции</h3><p>Функции — это многократно используемый код. Они так же приводят код в порядок и ускоряют процесс разработки. В Ren’Py функции вызываются при помощи команды <em>call</em>.</p><p>Перед тем как познакомится с функциями, добавим после строки <em>label start:</em> переменную <em>$ dvd_found = False</em>, чтобы запомнить есть ли у вас DVD-диск или нет. Это <em>логическая переменная</em> и может иметь только два значения: истина (True) или ложь (False).</p><blockquote><p>Примечание:</p><p>Ren’Py требователен к значениям переменных логического типа, которые должны начинаться с заглавной буквы (т. е. <em>True</em> — это правильно, а <em>true</em> вызовет ошибку).</p></blockquote><p>Теперь определим три функции перед меткой <em>label start:</em>.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>label show_fire<span class="token punctuation">:</span>
    $ num <span class="token operator">=</span> renpy<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
    $ which <span class="token operator">=</span> <span class="token string">&quot;fire&quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>
    show expression which
    <span class="token keyword">with</span> fireflash
    <span class="token keyword">return</span>

label check_dvd<span class="token punctuation">:</span>
    <span class="token comment"># воспроизвести звук если dvd_found не равно True</span>
    <span class="token keyword">if</span> dvd_found <span class="token operator">==</span> <span class="token boolean">False</span><span class="token punctuation">:</span>
      play sound <span class="token string">&quot;sounds/sound.wav&quot;</span>
    $ <span class="token keyword">if</span> dvd_found <span class="token operator">==</span> <span class="token boolean">False</span><span class="token punctuation">:</span> items<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&quot;DVD-диск&quot;</span><span class="token punctuation">)</span>
    $ <span class="token keyword">if</span> dvd_found <span class="token operator">==</span> <span class="token boolean">False</span><span class="token punctuation">:</span> items<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>
    $ <span class="token keyword">if</span> dvd_found <span class="token operator">==</span> <span class="token boolean">False</span><span class="token punctuation">:</span> dvd_found <span class="token operator">=</span> <span class="token boolean">True</span>
    <span class="token keyword">return</span>

label checktime<span class="token punctuation">:</span>
    <span class="token comment"># вызываем функцию show_fire из этой функции</span>
    call show_fire

    play sound <span class="token string">&quot;sounds/woosh.wav&quot;</span>
    $ time <span class="token operator">-=</span> <span class="token number">5</span>
    <span class="token keyword">if</span> time <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">:</span>
      jump burn
    <span class="token keyword">return</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Первая функция <em>show_fire</em> используется для случайного выбора фона из четырех изображений. Для этого в переменную <em>num</em> помещается случайное число от одного до четырех. Затем это число преобразовывается в строку и добавляется к строке <em>fire</em>. После чего передаём ее команде show, преобразовав оператором <em>expression</em> в исполняемую строку. В результате с эффектом <em>fireflash</em> (определённый ранее) отобразиться фон с огнём.</p><p>Вторая функция <em>check_dvd</em> сперва проверяет, равно ли значение переменной dvd_found False. Если это так, то элемент добавляется в инвентарь с помощью метода append, а сам список сортируется в алфавитном порядке. В конце, переменной dvd_found присваивается значение True, для избежания повторного добавления DVD-диска в инвентарь.</p><p>Для третей функции <em>checktime</em> понадобиться ранее используемая переменная <em>time</em>, со значением 25. Не бойтесь, в программировании повторное использование переменных вполне нормальная практика.</p><p>В эпизоде, где игрок лихорадочно ищет DVD-диск в офисе охваченным огнём имеется четыре комнаты (т. е. <em>Помещение офиса - officefire</em>, <em>Рабочий стол Рона - firedesk_a</em>, <em>Соседний стол А - firedesk_b</em>, <em>Соседний стол Б - firedesk_c</em>). А искомый диск находиться на рабочем столе коллеги <em>firedesk_c</em>, но игрок об этом не знает. Вот здесь и будет использоваться функция <em>checktime</em>, которая при каждом переходе между столами будет сокращать переменную time на 5 секунд, а как только время достигнет нуля, то функция выполнить переход к сцене гибели игрока в огне.</p><p>Чтобы перейти к созданию данного эпизода нужно ещё добавить сцену с переулком, где указываем значение для переменной time:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    <span class="token comment"># В Аду</span>
    label actionscene<span class="token punctuation">:</span>

    scene alley
    <span class="token keyword">with</span> dissolve

    play music <span class="token punctuation">[</span> <span class="token string">&quot;sounds/fireplace.mp3&quot;</span> <span class="token punctuation">]</span> fadein <span class="token number">10.0</span> loop

    <span class="token string">&quot;Оказавшись возле офиса, Рон, недолго думая, взбирается по пожарной лестнице.&quot;</span>
    $ time <span class="token operator">=</span> <span class="token number">25</span>

    call show_fire
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="система-частиц-с-snowblossom" tabindex="-1"><a class="header-anchor" href="#система-частиц-с-snowblossom" aria-hidden="true">#</a> Система частиц с SnowBlossom</h3><p>Главный герой попадает в огненный ад, а огонь как мы знаем сопровождается искрами. Давайте добавим такой эффект используя <em>систему частиц</em>. Где сама частица — это маленькое изображение (спрайт), а используя большое количество таких частиц, можно создать эффекты как дождь, снег и взрыв. Для этого в Ren’Py существует встроенный объект SnowBlossom. Он часто используется в визуальных новеллах для реализации падение листвы с дерева или лепестков цветущей сакуры, но мы применим данный эффект для создания анимации искр огня.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    <span class="token comment"># Добавляем и настраиваем эффект летящих искр с помощью SnowBlossom</span>
    image sparks <span class="token operator">=</span> Fixed<span class="token punctuation">(</span>
        SnowBlossom<span class="token punctuation">(</span>im<span class="token punctuation">.</span>FactorScale<span class="token punctuation">(</span><span class="token string">&quot;images/fireparticle.png&quot;</span><span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>count<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">,</span>start<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        SnowBlossom<span class="token punctuation">(</span>im<span class="token punctuation">.</span>FactorScale<span class="token punctuation">(</span>im<span class="token punctuation">.</span>Alpha<span class="token punctuation">(</span><span class="token string">&quot;images/fireparticle.png&quot;</span><span class="token punctuation">,</span><span class="token number">0.8</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0.6</span><span class="token punctuation">)</span><span class="token punctuation">,</span>count<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">,</span>yspeed<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">125</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Основные параметры SnowBlossom это <em>count</em>, <em>start</em>, <em>yspeed</em> и <em>xspeed</em>. Параметр start задаёт в секундах задержку появления новых частиц. Сейчас данный параметр равен 5 секундам. Параметр count задаёт количество частиц.</p><p>Далее параметр yspeed задает скорость по вертикали, а xspeed задает скорость по горизонтали. Значение этих атрибутов, может быть, как отрицательные, так и положительные, и состоять из одного числа или кортежа (например <em>(5,10)</em> или <em>(-10,-5)</em>). При использовании в Ren’Py кортежей, то значение для параметра будет выбрано случайно из указанного диапазона чисел. В нашей игре искры должны падать довольно медленно, для этого зададим скорость от 50 до 125.</p><p>Так же видно, что в коде используется два экземпляра SnowBlossom. Первый создаёт полноразмерные частицы, а второй уменьшенный вариант этих частиц. Так же во втором варианте через параметр <em>im.Alpha</em>, который равен 0,6, указывается альфа-канал, делающий искры огня полупрозрачными. Благодаря этому достигается иллюзия глубины.</p><p>Так же можно использовать более упрощенный вариант эффекта SnowBlossom:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>  image sparks <span class="token operator">=</span> Fixed<span class="token punctuation">(</span>
       SnowBlossom<span class="token punctuation">(</span>im<span class="token punctuation">.</span>FactorScale<span class="token punctuation">(</span><span class="token string">&quot;images/fireparticle.png&quot;</span><span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> count<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> yspeed<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">110</span><span class="token punctuation">)</span><span class="token punctuation">,</span> xspeed<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> start<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Но такой код создаст просто красивый эффект снега, но нам нужны более реалистичные искры, поэтому оставим предыдущий код.</p><p>Далее активизируем частицы при помощи команды show:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    show sparks

    menu officefire<span class="token punctuation">:</span>
     <span class="token string">&quot;Выбери действие. У вас осталось [time] секунд. Вы находитесь в помещении офиса.&quot;</span>
     <span class="token string">&quot;Подбежать к своему рабочему столу&quot;</span><span class="token punctuation">:</span>
         call checktime
         jump firedesk_a

     <span class="token string">&quot;Подбежать к столу коллеги&quot;</span><span class="token punctuation">:</span>
         call checktime
         jump firedesk_b

     <span class="token string">&quot;Подбежать к столу другого коллеги&quot;</span><span class="token punctuation">:</span>
         call checktime
         call check_dvd
         jump firedesk_c
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>После чего игрок видит меню из трёх пунктов. Сделав выбор, вызывается функция <em>checktime</em>, которая уменьшает оставшееся время на пять единиц. Если значение времени станет ниже пяти, то функция перенесет игрока к метке <em>burn</em> окончания игры. В этой части кода хорошо показано, как вынесенный повторяющийся код в функцию сокращает его размер.</p><p>Когда игрок попадает в комнату с DVD-диском (<em>firedesk_c</em>), то выполняется функция <em>check_dvd</em>, которая добавить диск к инвентарю, и отметит, что он найден.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    menu outwindow<span class="token punctuation">:</span>
     <span class="token string">&quot;Выбери действие. У вас осталось [time] секунд. Вы находитесь в помещении офиса.&quot;</span>
     <span class="token string">&quot;Вылезти через окно&quot;</span><span class="token punctuation">:</span>
         call checktime
         jump window

     <span class="token string">&quot;Подбежать к своему рабочему столу&quot;</span><span class="token punctuation">:</span>
         call checktime
         jump firedesk_a

     <span class="token string">&quot;Подбежать к столу коллеги&quot;</span><span class="token punctuation">:</span>
         call checktime
         jump firedesk_b

     <span class="token string">&quot;Подбежать к столу другого коллеги&quot;</span><span class="token punctuation">:</span>
         call checktime
         call check_dvd
         jump firedesk_c
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Для комнаты <em>&quot;Помещение офис&quot;</em> создаётся два почти идентичных меню. Первое это <em>officefire</em> переход, к которому выполняться при <em>dvd_found</em> равно False. Второе меню <em>outwindow</em> с дополнительным пунктом <em>&quot;Вылезти в окно&quot;</em>, выведется если переменная <em>dvd_found</em> будет равна True. Другими словами, возможность покинуть охваченный огнём офис через окно, появляется, когда игрок найдет DVD-диск посетив комнату <em>firedesk_c</em>, а потом вернется в комнату <em>&quot;Помещение офис&quot;</em>.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    menu firedesk_a<span class="token punctuation">:</span>
     <span class="token string">&quot;Выбери действие. У вас осталось [time] секунд. Вы находитесь возле своего рабочего стола, но здесь нет DVD-диска, только пламя.&quot;</span>

     <span class="token string">&quot;Вернуться в помещение офиса&quot;</span><span class="token punctuation">:</span>
         call checktime
         <span class="token keyword">if</span> dvd_found <span class="token operator">==</span> <span class="token boolean">False</span><span class="token punctuation">:</span>
              jump officefire
         <span class="token keyword">else</span><span class="token punctuation">:</span>
              jump outwindow

     <span class="token string">&quot;Подбежать к столу коллеги&quot;</span><span class="token punctuation">:</span>
         call checktime
         jump firedesk_b

     <span class="token string">&quot;Подбежать к столу другого коллеги&quot;</span><span class="token punctuation">:</span>
         call checktime
         call check_dvd
         jump firedesk_c

    menu firedesk_b<span class="token punctuation">:</span>
     <span class="token string">&quot;Выбери действие. У вас осталось [time] секунд. Вы находитесь возле стола своего коллеги, но здесь нет DVD-диска, только дым.&quot;</span>

     <span class="token string">&quot;Вернуться в помещение офиса&quot;</span><span class="token punctuation">:</span>
         call checktime
         <span class="token keyword">if</span> dvd_found <span class="token operator">==</span> <span class="token boolean">False</span><span class="token punctuation">:</span>
              jump officefire
         <span class="token keyword">else</span><span class="token punctuation">:</span>
              jump outwindow

     <span class="token string">&quot;Вернуться к своему рабочему столу&quot;</span><span class="token punctuation">:</span>
         call checktime
         jump firedesk_a

     <span class="token string">&quot;Подбежать к столу другого коллеги&quot;</span><span class="token punctuation">:</span>
         call checktime
         call check_dvd
         jump firedesk_c
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Так. Комнаты <em>firedesk_a</em> и <em>firedesk_b</em> добавлены, осталось добавить комнату с DVD-диском:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    menu firedesk_c<span class="token punctuation">:</span>
     <span class="token string">&quot;Выбери действие. У вас осталось [time] секунд. Вы находитесь возле стола другого коллеги.&quot;</span>

     <span class="token string">&quot;Вернуться в помещение офиса&quot;</span><span class="token punctuation">:</span>
         call checktime
         <span class="token keyword">if</span> dvd_found <span class="token operator">==</span> <span class="token boolean">False</span><span class="token punctuation">:</span>
              jump officefire
         <span class="token keyword">else</span><span class="token punctuation">:</span>
              jump outwindow

     <span class="token string">&quot;Подбежать к своему рабочему столу&quot;</span><span class="token punctuation">:</span>
         call checktime
         jump firedesk_a

     <span class="token string">&quot;Подбежать к столу коллеги&quot;</span><span class="token punctuation">:</span>
         call checktime
         jump firedesk_b
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>В случае если наш главный герой погибает, но он при этом успел найти диск, то мы, используя условный оператор, отобразим дополнительный диалог:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>label burn<span class="token punctuation">:</span>
    <span class="token string">&quot;Задыхаясь от дыма, вы теряете сознание и сгораете заживо.&quot;</span>
    <span class="token keyword">if</span> dvd_found <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        <span class="token string">&quot;В результате после пожара спасатели обнаружили труп с DVD-диском в руках.&quot;</span>

    <span class="token comment"># Возвращаемся в главное меню</span>
    $ renpy<span class="token punctuation">.</span>full_restart<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>После этого используя метод <em>full_restart</em> сбрасываем игру, отобразив игроку главное меню. Игра окончена!</p><p>Теперь вставим код, когда главный герой успешно находит DVD-диск и спасается от огня:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>label window<span class="token punctuation">:</span>
    <span class="token string">&quot;В конце концов вы находите спасение выбравшись из офиса через окно и спустившись по пожарной лестнице!&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="случаиныи-диалог" tabindex="-1"><a class="header-anchor" href="#случаиныи-диалог" aria-hidden="true">#</a> Случайный диалог</h3><p>Давайте добавим в историю случайные диалоги, чтобы разнообразить игру.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    $ randomdialogue <span class="token operator">=</span> renpy<span class="token punctuation">.</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;Телефон в портфеле снова зазвонил.&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Из портфеля раздался пронзительно громкий звук.&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Зазвонил старый мобильный телефон.&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

    play sound <span class="token string">&quot;sounds/phone.wav&quot;</span> loop

    <span class="token comment"># Отображаем случайный диалог</span>
    <span class="token string">&quot;[randomdialogue]&quot;</span>

    stop sound
    show roy<span class="token punctuation">:</span>
        xalign <span class="token number">0.0</span>
        xpos <span class="token number">0.2</span>
        ypos <span class="token number">0.2</span>
    <span class="token keyword">with</span> dissolve

    roy <span class="token string">&quot;Молодец. Теперь иди домой и жди дальнейших указаний. Если необходимо, защити диск ценой своей жизни.&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>В данной части кода используя переменную randomdialogue строка <em>&quot;[randomdialogue]&quot;</em> выводит одну из трех строк, хранящихся в переменной <em>random_narration</em>.</p><p>То есть если нам понадобиться получить и вывести случайное значение, нужно написать приблизительно следующие строки:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    <span class="token comment"># Генерируем случайное число от 20 до 80</span>
    $ random_number <span class="token operator">=</span> renpy<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span>

    <span class="token string">&quot;Вы в мотивированы на [random_number]%%, чтобы продолжить квест!&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Здесь мы инициализируем переменную <em>random_number</em>, и присваиваем ей значение от 1 до 100. Далее выводим её в диалоге игры. Однако нам нужно отобразить символ <em>%</em>, а это зарезервированный символ, для этого заменим его на запись <em>%%</em>, иначе Ren’Py выдаст ошибку.</p><p>А если потребуется сгенерировать случайное значение с плавающей запятой от 0 до 1 (например, <em>0,5</em> или <em>0,9</em>), то нужно воспользоваться методом <em>renpy.random.random()</em>.</p><h3 id="стили-и-гиперссылки" tabindex="-1"><a class="header-anchor" href="#стили-и-гиперссылки" aria-hidden="true">#</a> Стили и гиперссылки</h3><p>Сценарий этой маленькой игры заканчивается следующим образом:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>label home<span class="token punctuation">:</span>

    scene london2
    <span class="token keyword">with</span> dissolve

    <span class="token comment"># Мы используем музыкальный канал для воспроизведения фона, так как он</span>
    <span class="token comment"># позволяет зациклит и применить затухание к аудио дорожке.</span>
    play music <span class="token punctuation">[</span> <span class="token string">&quot;sounds/london_bridge.wav&quot;</span> <span class="token punctuation">]</span> fadein <span class="token number">10.0</span> loop

    <span class="token string">&quot;Чем ближе Рон становился к дому, тем спокойней себя чувствовал.&quot;</span> 

    play sound <span class="token string">&quot;sounds/phone.wav&quot;</span> loop

    <span class="token string">&quot;Телефон снова зазвонил.&quot;</span>
    stop sound

    <span class="token string">&quot;Ответив, он услышал женский голос.&quot;</span>
   
    <span class="token comment"># Показываем Рейн с серьёзным лицом</span>
    show rai serious<span class="token punctuation">:</span>
        xalign <span class="token number">0.0</span>
        xpos <span class="token number">0.2</span>
        ypos <span class="token number">0.2</span>
    <span class="token keyword">with</span> dissolve
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Как видим, код выводит диалоги без форматирования. В конце, командой <em>show rai serious</em>, изменяем лицо Рейн на серьёзное, которое было определено ещё в начале сценария.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    rai <span class="token string">&quot;{i}Ни в коем случае, не возвращайтесь домой!{/i} Покинь город прямо {u}сейчас.{/u} Сядь на поезд, и уезжай на север.&quot;</span>
    rai <span class="token string">&quot;Главное не задерживайся! Чуть позже я тебе перезвоню. {b}И не потеряй диск!{/b}&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Следующая часть кода сменяет лицо Рейн на дерзкое, оно является лицом по умолчанию. Напомним, что если команда show применяется без каких-либо параметров, то будет показано изображение персонажа по умолчанию (например, <em>rai.png</em>, <em>roy.png</em> и <em>reg.png</em>).</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    <span class="token comment"># Меняем лицо Рейн с серьёзного на дерзкое</span>
    hide rai
    show rai<span class="token punctuation">:</span>
        xalign <span class="token number">0.0</span>
        xpos <span class="token number">0.2</span>
        ypos <span class="token number">0.2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>В предыдущих диалогах мы применили к тексту три стиля: жирный, курсив и нижнее подчеркивание. Для этого строки оборачиваются в специальные теги состоящий из фигурных скобок с символом нужного стиля внутри (например, <em>{u}</em>). Но помните, используйте форматирование с умом, чтобы текст был легко читаем.</p><p>Теперь, давайте вставим немного рекламы в виде гиперссылки в диалоге.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    rai <span class="token string">&quot;О, когда будет свободное время, посетите {a=https://www.example.com}этот сайт{/a}.&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Как видим гиперссылки в Ren’Py встраиваются при помощи тега <em>a</em>, и после символа равно указывается ссылка на ресурс.</p><p>Если нужно изменить размер текста, то воспользуйтесь тегом <em>size</em>. Пример его использования, а также как можно комбинировать теги, показано в следующем коде.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    rai <span class="token string">&quot;Я каждый день на нём нахожу что-то новое. Он очень {size=+10}{i}увлекательный{/i}{/size}.&quot;</span>
    hide rai

    <span class="token comment"># Заменяем фоновый звук на другой </span>
    play music <span class="token punctuation">[</span> <span class="token string">&quot;sounds/ambience.wav&quot;</span> <span class="token punctuation">]</span> fadein <span class="token number">10.0</span> loop

    <span class="token comment"># Музыкальный канал отлично подходит и для создания атмосферного фона, </span>
    <span class="token comment"># и для воспроизведения аудио с определёнными параметрами.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="добавляем-видео" tabindex="-1"><a class="header-anchor" href="#добавляем-видео" aria-hidden="true">#</a> Добавляем видео</h3><p>Воспроизвести видео в Ren’Py очень просто. Достаточно написать на языке Python <em>renpy.movie_cutscene</em> и передать путь к видеофайлу. Будьте внимательны к регистру символов и правильности пути к файлу, иначе Ren’Py выдаст ошибку. Что касается формата видео контейнера для проектов Ren’Py самым популярным является WebM.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    $ renpy<span class="token punctuation">.</span>movie_cutscene<span class="token punctuation">(</span><span class="token string">&quot;videos/Interlude.webm&quot;</span><span class="token punctuation">)</span>
    scene door
    <span class="token keyword">with</span> dissolve
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Примечание:</p><p>Большинство видеоредакторов не поддерживают экспорт в формат WebM. Для этих целей может потребоваться установить дополнительный плагин. Как альтернатива, можно экспортировать видео в любом доступном формате, а затем используя сторонне программное обеспечение конвертировать видеофайл в WebM.</p></blockquote><h3 id="скорость-текста-на-лету" tabindex="-1"><a class="header-anchor" href="#скорость-текста-на-лету" aria-hidden="true">#</a> Скорость текста на лету</h3><p>Подобный эффект пишущей машинки мы уже рассматривали ранее в этой главе. Для этого нужно было внести изменения в файл <em>options.rpy</em>. Хотя данный эффект применяется глобально, но мы можем на него повлиять локально из самого скрипта игры.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    <span class="token string">&quot;Оказавшись возле своей квартиры, Рон услышал странные звуки. Чтобы понять что там происходит, он приложил ухо к двери, {cps=5}но звук стал только громче.{/cps}&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Для этого используется тег <em>cps</em>, где после знака равно указывается скорость печати текста. Используйте данный эффект, когда нужно добавить больше драматичности тексту повествования.</p><h3 id="живои-текст" tabindex="-1"><a class="header-anchor" href="#живои-текст" aria-hidden="true">#</a> Живой текст</h3><p>Ren’Py имеет множество тегов для стилизации текста в диалоге игры.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    <span class="token string">&quot;{k=-1.5}Что-то не так.{/k} {k=1.5}Рон вспомнил совет девушки и ушел прочь.{/k}&quot;</span>
    <span class="token string">&quot;Он направился на вокзал. По дороге случайно оглянулся назад, и{vspace=25}{w}заметил, что за ним следует человек.&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>В данном фрагменте сценария демонстрируется <em>эффект кернинг текста {k}</em>, <em>вертикальное пространство между строками {vspace}</em> и <em>ожидание {w}</em>. Кернинг устанавливает отступ между символами. Может иметь как отрицательное значение (приблизить символы), так и положительное (отдалить символы).</p><p>Тег <em>vspace</em> добавляет вертикальное пространство между строками размером равное указанному параметру в пикселях. Тег ожидания просто ждет щелчка мыши, чтобы продолжить повествование.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    <span class="token string">&quot;С неестественно большими глазами, одетый в голубой комбинезон. Он выглядел как-то не естественно, хоть и имел фигуру человека. {fast} От него тянуло страхом, что аж замирало сердце.&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Тег <em>fast</em> мгновенно, в соответствии с настройками в файле параметров Ren’Py, отображает текст, который идет перед ним.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>    scene station
    <span class="token keyword">with</span> dissolve
    stop music fadeout <span class="token number">5.0</span>

    <span class="token string">&quot;Рон побежал. Остановился только возле вокзала, задыхаясь и кашляя. Он надеялся, что оторвался от преследователя.&quot;</span>
    <span class="token string">&quot;Следуя совету Рейн, Рон направился взять билет на ближайший поезд, который идет на север.&quot;</span>
    <span class="token string">&quot;Вот мы и достигли конца учебной визуальной новеллы на Ren’Py.&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Вот и подошла к концу первая часть &quot;Август возвращается&quot;. Вы познакомились с основными возможностями Ren’Py, и в результате создали игру. Если вам хочется завершить данный проект, то придётся это сделать самостоятельно, а мы продолжим разрабатывать игру на следующем движке.</p><h2 id="часть-ii-основная-часть-истории-рона-на-tyranobuilder" tabindex="-1"><a class="header-anchor" href="#часть-ii-основная-часть-истории-рона-на-tyranobuilder" aria-hidden="true">#</a> Часть II: Основная часть истории Рона на TyranoBuilder</h2><p>Чтобы продолжить историю <em>&quot;Август возвращается&quot;</em>, мы погрузимся в мир TyranoBuilder с его графическим интерфейсом, и для начала создадим новый проект.</p><p>После ввода названия укажем:</p><ul><li>Game Type (Тип игры): <em>Visual Novel (Визуальная новелла)</em></li><li>Screen Size (Размер экрана): <em>Landscape (1280 x 720) (Альбомный (1280 x 720))</em></li><li>Game Settings (Настройки игры): <em>убрать галочки с No Title Screen (Без заголовка экрана) и No Menu Button (Без кнопок меню)</em></li></ul><p>На последнем шаге нажимаем кнопку <em>Create New Project (Создать новый проект)</em>.</p><p>В созданном проекте выберите <em>Background Image (Фоновое изображение)</em> и удалите его, нажав на крестик удаления.</p><h3 id="персонажи" tabindex="-1"><a class="header-anchor" href="#персонажи" aria-hidden="true">#</a> Персонажи</h3><p>Для повествования нам нужны персонажи. Для этого в меню выберите <em>Project\\Characters</em> (<em>Проект\\Персонажи</em>). В появившемся окне <em>Characters</em> (<em>Персонажи</em>), при помощи поля ввода <em>Character Name</em> (<em>Имя персонажа</em>) добавим следующих персонажей: <em>Клэр</em>, <em>Человек в комбинезоне</em>, <em>Рон</em> и <em>Рейн</em>. TyranoBuilder автоматически создаст в каталоге <em>ProjectName/data/fgimage</em> пронумерованные подкаталоги для персонажей (например, 1 – это Клэр, 2 – это Человек в комбинезоне и так далее), в которых будут сохранены связанные с ними изображения.</p><h3 id="поезд" tabindex="-1"><a class="header-anchor" href="#поезд" aria-hidden="true">#</a> Поезд</h3><p>Продолжим историю. Наш отважный главный герой оказался возле поезда. Теперь скопируйте следующий текстовый блок и ставьте его в красное поле <em>&quot;Text (Текст)&quot;</em> под <em>&quot;Show Text (Показать текст)&quot;</em>.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Рон побежал. Остановился только возле вокзала, задыхаясь и кашляя. Он надеялся, что оторвался от преследователя.
Следуя совету Рейн, Рон направился взять билет на ближайший поезд, который идет на север.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Далее следует еще один фрагмент повествования для второго компонента Show Text:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&quot;Извините!&quot; — кто-то обратился к Рону. Темноволосая девушка возникла из не откуда, заблокировав проход в вагон. &quot;Это 
поезд на север?&quot; - улыбаясь спросила она.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Как видим, TyranoBuilder предлагает удобный графический интерфейс для создания визуальных новелл. Однако нужно не забывать о мощном компоненте TyranoScript, который имеет больше возможностей для разработки. Соответственно эта часть игры и будет в основном создана на данном компоненте.</p><h3 id="ассеты-и-каталоги" tabindex="-1"><a class="header-anchor" href="#ассеты-и-каталоги" aria-hidden="true">#</a> Ассеты и каталоги</h3><p>TyranoBuilder использует аудио, видео, изображения и другие файлы. Всё это он распределяет по специально выделенным каталогам, которые автоматически создаются для каждого проекта. Давайте с ними познакомимся. Так как TyranoBuilder в основном распространяется через Steam, то, чтобы открыть каталог с проектом нужно выполнить следующие действия:</p><ul><li>Найдите в библиотеке Steam приложение TyranoBuilder, на котором щелкните правой кнопкой мыши и выберите <em>&quot;Properties (Свойства)&quot;</em>.</li><li>Откройте вкладку <em>&quot;Local Files (Локальный файлы)&quot;</em>.</li><li>Нажмите на кнопке <em>&quot;Browse Local Files (Просмотреть локальные файлы)&quot;</em></li></ul><p>Откроется каталог программы TyranoBuilder. В котором находите и открываете каталог вашего проекта, после чего переходите в каталог <em>data</em> (например, <em>myproject\\nameproject\\data</em>). В результате отобразится структура каталога, где хранятся все файлы игры, с описанием которых можно ознакомиться в таблице 7-16.</p><p>Есть и другой способ попасть в данный каталог. В TyranoBuilder выбираете пункт главного меню <em>&quot;TyranoBuilder\\Project List&quot;</em>. Откроется список проектов, находите ваш проект и справой стороны от названия нажимаете на <em>иконку с изображением папки</em>.</p><p><strong>Таблица 7-16.</strong> Основные каталоги проектов TyranoBuilder (каталог &quot;nameproject\\data&quot;).</p><table><thead><tr><th>Каталог</th><th>Используется для</th></tr></thead><tbody><tr><td><em>bgimage</em></td><td>Фоновых изображений</td></tr><tr><td><em>bgm</em></td><td>Фоновой музыки (в формате .ogg или .wav)</td></tr><tr><td><em>fgimage</em></td><td>Изображений персонажей. Создаются автоматически</td></tr><tr><td><em>image</em></td><td>Изображений, связанных с пользовательским интерфейсом</td></tr><tr><td><em>others</em></td><td>Плагинов (т. е. установленные дополнения)</td></tr><tr><td><em>scenario</em></td><td>Файлов сцен (например, scene1.ks)</td></tr><tr><td><em>sound</em></td><td>Звуковых эффектов (в формате .wav или .ogg)</td></tr><tr><td><em>video</em></td><td>Видеофайлов (желательно формат .webM)</td></tr></tbody></table><p>Одним из основных элементов игры является звуковое сопровождение. Для этого в TyranoScript используется специальный набор тегов (см. Таблицу 7-17). Чтобы программа понимала, что мы используем тег его оборачивают в квадратные скобки или используют знак @ в начале строки если тег не более одной строки (например, <em>@playse Storage=cheer.ogg</em>).</p><blockquote><p>Примечание:</p><p>Для комментариев в TyranoScript используют точку с запятой (;).</p></blockquote><p><strong>Таблица 7-17.</strong> Теги для работы со звуком</p><table><thead><tr><th>Тег</th><th>Описание</th><th>Пример</th></tr></thead><tbody><tr><td><em>[playse]</em></td><td>Воспроизводит звук. Параметры loop и clear не обязательны. Повторный вызов останавливает воспроизведение предыдущего звукового эффекта</td><td>[playse storage=cheer.ogg loop=false clear=true]</td></tr><tr><td><em>[stopse]</em></td><td>Останавливает воспроизведение звука</td><td>[stopse]</td></tr><tr><td><em>[seopt]</em></td><td>Устанавливает громкость звука</td><td>[seopt volume=70]</td></tr><tr><td><em>[wse]</em></td><td>Ожидает завершения воспроизведения звукового эффекта</td><td>[wse]</td></tr><tr><td><em>[playbgm]</em></td><td>Воспроизводит фоновую музыку. Параметры: <em>loop</em>, <em>time</em> (точка с которой начать воспроизведения в миллисекундах)</td><td>[playbgm storage=&quot;song1.ogg&quot; loop=true]</td></tr><tr><td><em>[stopbgm]</em></td><td>Останавливает воспроизведение фоновой музыки</td><td>[stopbgm]</td></tr><tr><td><em>[bgmopt]</em></td><td>Устанавливает громкость фоновой музыки</td><td>[bgmopt volume=50]</td></tr><tr><td><em>[xchgbgm]</em></td><td>Подмешивайте одну музыку, пока другая затихает. Параметры: <em>loop</em>, <em>time</em> (в миллисекундах)</td><td>[xchgbgm storage=song2.ogg loop=true time=4000]</td></tr><tr><td><em>[fadeoutbgm]</em></td><td>Задает затухание фоновой музыки в миллисекундах</td><td>[fadeoutbgm time=3000]</td></tr><tr><td><em>[fadeinbgm]</em></td><td>Задает затухание фоновой музыки в миллисекундах</td><td>[fadeinbgm time=5000]</td></tr></tbody></table><h3 id="звуки-в-поезде" tabindex="-1"><a class="header-anchor" href="#звуки-в-поезде" aria-hidden="true">#</a> Звуки в поезде</h3><p>Продолжим наше приключение. Перетащите компонент <em>&quot;Change Background (Изменить фон)&quot;</em> из категории &quot;Images (Изображения)&quot; и разместите его перед добавленным текстом. В свойствах компонента нажмите кнопку &quot;Browse (Обзор)&quot;, после чего загрузите файл с именем <em>train2.jpg</em>. Затем добавьте компонент &quot;TyranoScript&quot; перед компонентом _&quot;Exit Scene (Покинуть сцену)&quot;. Раскройте его, и вставьте следующий код:</p><div class="language-TyranoScript line-numbers-mode" data-ext="TyranoScript"><pre class="language-TyranoScript"><code>;Используя переменную &quot;f.rumlevel&quot;, устанавливаем уровень опьянения равный ноль
[eval exp=&quot;f.rumlevel = 0&quot;] 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>В строке <strong>[eval exp=&quot;f.rumlevel = 0&quot;]</strong>, определяем переменную с именем <em>f.rumlevel</em> со значением ноль. Напомним вам, что внутри игровые переменные в TyranoBuilder должны начинаться с <em>f.</em> (например, <em>f.happiness</em>, <em>f.attraction_level</em>). Теперь добавим в компонент ещё код:</p><div class="language-TyranoScript line-numbers-mode" data-ext="TyranoScript"><pre class="language-TyranoScript"><code>;Тег [r] вставляет новую строку
Девушка вызывала, только сомнение. - «Да, поезд идёт на север» - ответил Рон и пройдя мимо неё заскочил в вагон. [r]
;Тег [l] ждет щелчок мыши от игрока, а тег [cm] убирает весь текст.
Найдя своё место, Рон сел, и поезд трогается с места. [l][cm]
;Воспроизводим циклично фоновый звук в вагоне и движущегося поезда
[fadeinbgm storage=train_01.wav loop=true time=3000]
;Показываем новый фон
[bg storage=train1.jpg time=6000 wait=true]
Девушка снова встретилась с Роном, так как оказалось их места находятся рядом.[l][cm]
Она представилась, что её зовут Клер, и извинилась, что снова создаёт ему неудобства.[l][cm]
Когда Клэр села, то надела наушники, и закрыла глаза.[r]
Это обрадовало Рона, теперь он может спокойно собраться с мыслями и подумать.[l][cm]
;Проигрываем видео (невозможно пропустить)
[movie storage=interlude.webm skip=false]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>На основе комментариев к коду, становится ясно, что, используя тег <em>fadeinbgm</em> в фоне плавно (нарастание звука происходит в течении 3000 миллисекунд) зациклено воспроизводиться шум поезда.</p><p>Также меняется фоновое изображение при помощи тега <em>bg</em> с использованием 6-ти секундным эффектом плавного перехода. А в конце кода воспроизводится видео в формате webM.</p><p>TyranoBuilder имеет и другие теги для работы со слоями, текстом и изображениями см. Таблицу 7-18.</p><p><strong>Таблица 7-18.</strong> Теги для работы с текстом, слоями и изображениями.</p>`,300),u=n("thead",null,[n("tr",null,[n("th",null,"Тег"),n("th",null,"Описание"),n("th",null,"Пример(ы)")])],-1),m=n("tr",null,[n("td",null,[n("em",null,"[image]")]),n("td",null,[e("Отображает изображение."),n("br"),e("Параметры: "),n("em",null,"layer"),e(", "),n("em",null,"page"),e(", "),n("em",null,"visible"),e(", "),n("em",null,"width"),e(", "),n("em",null,"height"),e(", "),n("em",null,"x"),e(", "),n("em",null,"y"),e(". "),n("br"),e("Если указать layer значение "),n("em",null,"base"),e(", то изображение выведется как фон, а если указать число больше нуля, то изображение выведется на передний план."),n("br"),e("Параметр page принимает значение только "),n("em",null,"fore"),e(" или "),n("em",null,"back"),e(".")]),n("td",null,[e('[image storage="dude.jpg" layer=1 page=fore visible=true width="256" height="256" x="640" y="200"]'),n("br"),e('[image storage="bg.jpg" layer=base page=back visible=true width="1280" height="720" x="0" y="0"]')])],-1),c=n("tr",null,[n("td",null,[n("em",null,"[bg]")]),n("td",null,[e("Изменяет фон. "),n("br"),e("Параметры: "),n("em",null,"method"),e(", time_, "),n("em",null,"wait"),e(". "),n("br"),e("Параметр method принимает значение какой применить тип перехода (т. е. "),n("em",null,"crossfade, explode, slide, blind, bounce, clip, drop, fold, puff, scale, shake, size"),e(")."),n("br"),e("Параметр wait указывает, следует ли останавливать обработку до завершения замены.")]),n("td",null,[e("[bg storage=bg1.png method=slide time=2000 wait=true]"),n("br"),e("[bg storage=bg2.png method=puff time=4000 wait=false]")])],-1),v=n("tr",null,[n("td",null,[n("em",null,"[layopt]")]),n("td",null,[e("Управляет отображением слоев."),n("br"),e("Параметры: "),n("em",null,"page"),e(", "),n("em",null,"visible"),e(", "),n("em",null,"left"),e(" (позиция слева), "),n("em",null,"top"),e(", "),n("em",null,"opacity"),e(" (имеет значение от 0 до 255, где 255 — полностью прозрачен).")]),n("td",null,[e("[layopt layer=1 visible=true opacity=100]"),n("br"),e("[layopt layer=1 visible=false]")])],-1),b=n("tr",null,[n("td",null,[n("em",null,"[anim]")]),n("td",null,[e("Анимирует или перемещает изображение или спрайт персонажа."),n("br"),e("Необязательные параметры: "),n("em",null,"layer, left, top, width, height, opacity, color, time, effect"),e("."),n("br"),e("Параметр effect использует следующие значения: "),n("em",null,"jswing | def | easeInQuad | easeOutQuad | easeInOutQuad | easeInCubic | easeOutCubic | easeInOutCubic |easeInQuart | easeOutQuart | easeInOutQuart | easeInQuint | easeOutQuint | easeInOutQuint | easeInSine | easeOutSine | easeInOutSine | easeInExpo | easeOutExpo | easeInOutExpo | easeInCirc | easeOutCirc | easeInOutCirc | easeInElastic | easeOutElastic | easeInOutElastic | easeInBack | easeOutBack | easeInOutBack | easeInBounce | easeOutBounce | easeInOutBounce"),e(".")]),n("td",null,[e('[anim name="Billy" time=3000 left=100 top=40]'),n("br"),e('[anim name="Reginald" time=2000 left=800 top=40 effect=easeInOutQuint]'),n("br"),e('[anim name="Gayelord" time=1000 left=100 top=40 effect=easeInOutQuint color=red opacity=50]')])],-1),h=n("tr",null,[n("td",null,[n("em",null,"[ptext]")]),n("td",null,[e("Отображает текст. Понимает HTML-теги."),n("br"),e("Параметры: "),n("em",null,"text, size, x, y, color, vertical"),e(".")]),n("td",null,'[ptext layer=2 page=fore text="Привет <br><i>друзья!</i>" size=30 x=30 y=180 color=green]')],-1),g=n("td",null,[n("em",null,"[mtext]")],-1),k=n("br",null,null,-1),q=n("em",null,"text, x, y, in_effect, out_effect",-1),y=n("br",null,null,-1),f={href:"https://tyrano.jp/mtext/",target:"_blank",rel:"noopener noreferrer"},_=n("td",null,[e("[layopt layer=0 visible=true]"),n("br"),e('[mtext text="Привет!" x=200 y=100 in_effect="fadeIn" out_effect="hinge"]'),n("br"),e("[layopt layer=0 visible=true]"),n("br"),e('[mtext text=" Ух ты! Что это?" x=200 y=100 in_effect="bounceIn" out_effect="bounceOut"]')],-1),w=n("tr",null,[n("td",null,[n("em",null,"[filter]")]),n("td",null,[e("Применяет фильтр к слою или объекту."),n("br"),e("Параметры: "),n("em",null,"grayscale, sepia, saturate, hue, invert, opacity, brightness, contrast, blur"),e(".")]),n("td",null,[e('[filter layer="0" sepia=50]'),n("br"),e('[filter layer="0" invert]')])],-1),x=n("tr",null,[n("td",null,[n("em",null,"[free_filter]")]),n("td",null,"Отключает фильтры."),n("td",null,"[free_filter]")],-1),T=n("tr",null,[n("td",null,[n("em",null,"[movie]")]),n("td",null,[e("Воспроизводит фильм в формате mp4."),n("br"),e("Параметры: "),n("em",null,"skip"),e(" (пропустить просмотр видео или нет).")]),n("td",null,[e(";Показываем видео, которое нельзя пропустить"),n("br"),e('[movie storage="happymovie.mp4" skip=false]')])],-1),j=n("tr",null,[n("td",null,[n("em",null,"[bgmovie]")]),n("td",null,[e("Воспроизводит видео в фоне."),n("br"),e("Параметры: "),n("em",null,"volume"),e(", "),n("em",null,"loop"),e("."),n("br"),e("Примечание: желательно использовать формат видео webM.")]),n("td",null,[e(";Показать циклично видео с громкостью 80%"),n("br"),e('[bgmovie storage="movie.webm" volume=80 loop=true]')])],-1),S=n("tr",null,[n("td",null,[n("em",null,"[stop_bgmovie]")]),n("td",null,"Останавливает воспроизведение видео в фоне."),n("td",null,"[stop_bgmovie]")],-1),I=s(`<h3 id="взаимодеиствие-и-переменные" tabindex="-1"><a class="header-anchor" href="#взаимодеиствие-и-переменные" aria-hidden="true">#</a> Взаимодействие и переменные</h3><p>Продолжим историю. Давайте добавим взаимодействия игры с пользователем. Для этого вставив в последний компонент TyranoScript следующий код:</p><div class="language-TyranoScript line-numbers-mode" data-ext="TyranoScript"><pre class="language-TyranoScript"><code>;Реализуем диалоговое окно
Клер вытащила наушники, и достала флягу. Заметив, что Рон смотрит на неё, предложила сделать глоток.[l]
[dialog type=&quot;confirm&quot; text=&quot;Хотите выпить?&quot; label_ok=&quot;Да, пожалуй.&quot; storage=&quot;scene1.ks&quot; target=&quot;yes_label&quot; label_cancel=&quot;Спасибо, нет.&quot; storage_cancel=&quot;scene1.ks&quot; target_cancel=&quot;no_label&quot;]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>После выполнения команды <em>dialog</em>, будет показано модальное окно с двумя кнопками. Если игрок согласится сделать глоток, то после нажатия кнопки &quot;Да, пожалуй.&quot; он будет перенаправлен к месту с меткой <em>yes_label</em>. Если он откажется, нажав кнопку &quot;Спасибо, нет.&quot;, то будет перенаправлен к метке <em>no_label</em>. Данные метки можно реализовать с помощью компонента <em>Label</em>.</p><p>Для этого перетяните компонент Label в конец сцены, и укажите название no_label. После чего после добавленной метки добавьте компонент TyranoScript со следующим кодом:</p><div class="language-TyranoScript line-numbers-mode" data-ext="TyranoScript"><pre class="language-TyranoScript"><code>[cm]&quot;Как хотите&quot;, — и Клэр делает несколько глотков из фляжки.[l][cm]
;Переходим к метке yes_label
[jump storage=scene1.ks target=*continue]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Теперь, так же добавим вторую метку yes_label, и компонент TyranoScript с кодом:</p><div class="language-TyranoScript line-numbers-mode" data-ext="TyranoScript"><pre class="language-TyranoScript"><code>[playse storage=gulp.wav loop=false ]
;Увеличиваем уровень опьянения на единицу
[eval exp=&quot;f.rumlevel +=1&quot;]
[cm]&quot;Держи…&quot;, — сказала Клэр, протягивая вам флягу с ромом.[l][cm]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Если главный герой согласится выпить, то воспроизведётся звук глотка и выведется соответствующий диалог. Используемый файл звукового эффекта должен быть расположен в каталоге sound проекта игры. Кроме того при помощи тега <em>eval</em> увеличивается значение переменной <em>f.rumlevel</em> на единицу.</p><p>Добавим ещё один компонент TyranoScript.</p><div class="language-TyranoScript line-numbers-mode" data-ext="TyranoScript"><pre class="language-TyranoScript"><code>Между рядами сонных пассажиров появился человек в синем комбинезоне.[l][r]
Он всё так же выглядел не естественно и пугающе.[p]
Человек, что-то кинул в Рона, тот инстинктивно вскочили и побежал по проходу вагона.[r]Клэр кивнула, дав сигнал странному человеку последовать за Роном.[p]
;Сюжет становиться сложнее
Идя быстрым шагом, Рон пытался найти укрытие.[l][r]Но человек в комбинезоне с лысой головой преследовал его не давая это сделать.[l][cm]
[bg storage=train3.jpg time=3000 wait=false]Однако Рон успевает зайти в туалет и запереть дверь. [playse storage=knock.ogg loop=false]В след последовали сильные удары в дверь. Это тупик.[l][cm]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>В этой части сценария тег <em>bg</em> меняет фон вагона на фон уборной, после чего тег <em>playse</em> воспроизводит угрожающий стук в дверь. Так же можно заметить, для постепенного вывода текста используются ранее рассмотренные теги <em>[l]</em> и <em>[cm]</em>.</p><p>Продолжим сценарий игры, добавив проверку переменной f.rumlevel:</p><div class="language-TyranoScript line-numbers-mode" data-ext="TyranoScript"><pre class="language-TyranoScript"><code>;Если был сделан глоток вина, выведем дополнительное сообщение
[if exp=&quot;f.rumlevel==1&quot;] Но выпитый алкоголь немного притуплял чувство страха... Уровень рома в крови - [emb exp=f.rumlevel].
[endif]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Здесь условный оператор проверяет переменную <em>f.rumlevel</em> равна ли она единице, и если да, то будет выведена дополнительная строка, говорящая, что главный герой немного пьян.</p><p>В следствии написания данной части сценария игры мы познакомились с основными операциями с переменными в TyranoScript:</p><ul><li>[eval exp..] предназначен для присваивания значений.</li><li>[if exp..] предназначен для сравнения значений.</li><li>[emb exp..] предназначен для вывода переменных в текстовой строке.</li><li>Внутриигровые переменные имеют приставку <em>f.</em>.</li></ul><h3 id="случаиныи-диалог-1" tabindex="-1"><a class="header-anchor" href="#случаиныи-диалог-1" aria-hidden="true">#</a> Случайный диалог</h3><p>Теперь реализуем случайный диалог, как это было сделано в Ren’Py.</p><div class="language-TyranoScript line-numbers-mode" data-ext="TyranoScript"><pre class="language-TyranoScript"><code>;Зацикливаем звук звонка и отображаем случайною строку
[playse storage=phone.wav loop=true ]
[cm][eval exp=&quot;f.random_number = Math.floor((Math.random() * 3) + 1)&quot;]
[if exp=&quot;f.random_number==1&quot;]Зазвонил мобильный телефон. [endif]
[if exp=&quot;f.random_number==2&quot;]Зазвонил старый мобильный телефон. [endif]
[if exp=&quot;f.random_number==3&quot;]Телефон зазвонил так громко, что заглушил все звуки вокруг. [endif]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Используя тег <em>eval</em> определяем переменную <em>f.random_number</em>. Затем присваиваем ей случайное значение от одного до трех при помощи двух функций: <em>Math.floor</em> и <em>Math.random</em>. Функция Math.random возвращает случайное число (например: 1,4), а функция <em>Math.floor</em> округляет его до ближайшего целого числа (например: 1).</p><p>Поскольку Math.random генерирует значение от нуля до единицы, то, чтобы получить значение от единицы до трёх, нужно добавить единицу и умножить на три.</p><p>Продолжим:</p><div class="language-TyranoScript line-numbers-mode" data-ext="TyranoScript"><pre class="language-TyranoScript"><code>;Отображаем персонажа Рейн и отключаем звук телефона
[chara_show name=&quot;Рейн&quot; wait=true top=40 left=50]
[stopse]
&quot;Вы уже в пути? Хорошо. Они преследуют вас?&quot;[p]
&quot;Не волнуйтесь, оставайтесь на месте и просто ждите! Им не разрешено использовать силу.&quot;[p]
[anim name=&quot;Рейн&quot; time=2000 left=800 top=40]
&quot;По возможности покинь поезд на ближайшей станции. Вы меня поняли?&quot; - связь с женщиной прекратилась.
[filter name=&quot;Рейн&quot; blur=20][chara_hide name=&quot;Рейн&quot; time=1000 wait=true]
[p]
&quot;Ждать!&quot; - но такой ход, только раздражал Рона. [playse storage=knock.ogg]А удары в дверь продолжались. Прошло где-то пять минут, и они резко прекратились.
[playse storage=knock.ogg volume=30][p]
[bg storage=train1.jpg time=3000 wait=true]
Рон осторожно открыл дверь уборной. Никого не было, ни мужчины в комбинезоне, ни Клэр.[p]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Как видно в данном коде применяются теги <em>chara_show</em>, <em>chara_move</em> и <em>chara_hide</em>, которые используются для вывода, перемещения и удаления персонажа Рейн. Более подробно узнать об этих тегах можно в Таблице 7-19.</p><p>Кроме того, были применены теги <em>anim</em> и <em>filter</em>. Первый перемещает Рейн в право, а второй добавляет 20% размытие. Так же эти эффекты можно применять как к спрайтам, так и к целым слоям.</p><h3 id="метки-в-tyranoscript" tabindex="-1"><a class="header-anchor" href="#метки-в-tyranoscript" aria-hidden="true">#</a> Метки в TyranoScript</h3><p>Компонент TyranoScript так же поддерживает метки, которые помечаются символом звездочка в начале строки. В следующей части кода выполняется проверка переменной <em>f.rumlevel</em> на состоянии опьянения Рона, и если он пьян, то тегом <em>jump</em> выполняем переход к метке <em>*still_tipsy</em>, иначе к метке <em>*full_of_energy</em>.</p><div class="language-TyranoScript line-numbers-mode" data-ext="TyranoScript"><pre class="language-TyranoScript"><code>[bg storage=&quot;platform1.jpg&quot;]
Прозвучало объявление: следующая остановка &quot;Мягкая платформа&quot;![p]
[camera zoom=2 from_zoom=1 x=180 y=100 time=2000]
;Сбрасываем установки камеры
[reset_camera]
Когда поезд остановился, Рон огляделся по сторонам, и как только убедившись, что за ним нет слежки, покинул вагон.[p]
[if exp=&quot;f.rumlevel==1&quot;]  [jump target=*still_tipsy]
[else] [jump target=*full_of_energy][endif]

;Добавим метку
*still_tipsy
Однако выпитый Роном алкоголь клонил его ко сну, но нужно было идти.[p] [jump target=*resume_story]

;Добавим вторую метку
*full_of_energy
Адреналин просто вскипятил кровь в венах, активизировав все ресурсы организма.[p]
*resume_story
Только Рон успел потеряться в толпе, как его схватили за руку![p]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="эффект-3d-камеры" tabindex="-1"><a class="header-anchor" href="#эффект-3d-камеры" aria-hidden="true">#</a> Эффект 3D-камеры</h3><p>TyranoBuilder имеет функцию под названием <em>3D Camera</em>. Однако это всего лишь простое панорамирование и масштабирование 2D-изображений. Использование данного эффекта показано в предыдущей части кода игры.</p><p>Используя тег <em>[camera]</em> и <em>[reset_camera]</em>, в сцену был добавлен эффект актуализации внимания на сообщении диспетчера. Дополнительно в тег были переданы параметры: <em>zoom</em> – величина масштабирования, <em>from_zoom</em> – начальный масштаб, <em>x</em> и <em>y</em> – координаты куда нужно перенести камеру, <em>time</em> – время в миллисекундах, за которое камера должна выполнить перемещение. Для возвращения камеры в исходное состояние вызывается тег <em>reset_camera</em>. Однако данный эффект ресурсоёмкий, и желательно им не злоупотреблять.</p><h3 id="макросы-tyranoscript" tabindex="-1"><a class="header-anchor" href="#макросы-tyranoscript" aria-hidden="true">#</a> Макросы TyranoScript</h3><p>Макросы — это набор действий, определённые программистом. По есть, с их помощью можно определять новые теги. В приведённой части кода в первых двух строках используется тег <em>macro</em> для определения тега <em>redtag</em> и <em>yellowtag</em>, которые будут устанавливать цвет текста с помощью тега <em>font</em> и его атрибута.</p><div class="language-TyranoScript line-numbers-mode" data-ext="TyranoScript"><pre class="language-TyranoScript"><code>;Определяем два макроса
[macro name=&quot;redtag&quot;][font color=0xff0000][endmacro]
[macro name=&quot;yellowtag&quot;][font color=0xffff00][endmacro]
[redtag] &quot;Думаю, нам следует найти более тихое место для разговора&quot;, — по голосу Рон сразу узнал [font bold=true]Ройстона Медовая-Бабочка[font bold=false]  - человека из службы технической поддержки.[p]
[bg storage=&quot;park.jpg&quot;][chara_show name=&quot;Ройстон&quot; wait=true top=40 left=50]
[yellowtag]&quot;Извините, это я отправил вам письмо от имени вашего друга.&quot;[p]
[chara_mod name=&quot;Ройстон&quot; storage=&quot;chara/6/Roy2.png&quot; time=0]
[resetfont]
&quot;Мне нужно было вытащить вас оттуда.&quot;[p]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>В дополнение к двум макросам в коде используется тег смены изображения персонажа <em>chara_mod</em>, а чтобы этот процесс произошел мгновенно без использования эффекта затухания атрибут <em>time</em> выставлен в ноль. Больше информации об этих тегах указано в Таблице 7-19.</p><p>Чтобы вернуть стиль и цвет шрифта по умолчанию, в конце указан тег <em>resetfont</em>.</p><p><strong>Таблица 7-19.</strong> Теги для работы с персонажами.</p><table><thead><tr><th>Тег</th><th>Описание</th><th>Пример(ы)</th></tr></thead><tbody><tr><td><em>[chara_show]</em></td><td>Показывает персонажа.<br>Параметры: <em>wait</em>, <em>time</em>, <em>layer</em>, <em>left</em>, <em>top</em>.<br>Параметр wait если указано true, тег будет ждать появления персонажа. Параметр time устанавливает время перехода в миллисекундах (по умолчанию — 1000). Параметр layer устанавливает на каком слое нужно показать персонажа (по умолчанию — передний план). Параметры left и top указывают положение изображения.</td><td>[chara_show name=&quot;Billy&quot;]<br>;Показываем персонажа<br>;с задержкой<br>[chara_show name=&quot;Gayelord&quot; wait=true top=100 left=50]</td></tr><tr><td><em>[chara_hide]</em></td><td>Убирает со сцены персонажа</td><td>[chara_hide name=&quot;Billy&quot;]</td></tr><tr><td><em>[chara_move]</em></td><td>Выполняет перемещение изображения персонажа. <br>Параметры: <em>time</em>, <em>anim</em>, <em>left</em>, <em>top</em>, <em>width</em>, <em>height</em>, <em>wait</em>, <em>effect</em>. <br>Параметр anim указывает анимировать перемещение или нет. Параметр effect устанавливает эффект для анимации. Параметры width и height устанавливают новый размер изображения</td><td>[chara_move name=&quot;Gayelord&quot; time=2000 left=800 top=40 anim=true effect=easeInCubic]</td></tr><tr><td><em>[chara_mod]</em></td><td>Смена изображения персонажа.<br>Параметры: <em>time</em>, <em>reflect</em>, <em>wait</em>, <em>cross</em>.<br>Параметр reflect указывает переворачивать изображение по горизонтали или нет. Параметр cross указывает, будет ли старое изображение плавно переходить к новому. Параметр time устанавливает время эффекта перехода в миллисекундах (по умолчанию 600 мс).</td><td>;Смена изображения персонажа<br>[chara_mod name=&quot;Billy&quot; storage=&quot;billy/1/sadface.png&quot;]<br>;Смена изображения персонажа с эффектом перехода<br>[chara_mod name=&quot;Billy&quot; storage=&quot;billy/1/happyface.png&quot; cross=true time=1000]</td></tr><tr><td><em>[chara_delete]</em></td><td>Полностью удаляет персонажа из игры.</td><td>[chara_delete name=&quot;Billy&quot;]</td></tr></tbody></table><h3 id="графические-объекты-в-диалогах" tabindex="-1"><a class="header-anchor" href="#графические-объекты-в-диалогах" aria-hidden="true">#</a> Графические объекты в диалогах</h3><p>При помощи тега <em>graph</em> можно добавить изображение в текст диалога. Сами изображения должны находиться в каталоге image проекта.</p><div class="language-TyranoScript line-numbers-mode" data-ext="TyranoScript"><pre class="language-TyranoScript"><code>;Add some inline images
[macro name=&quot;phone&quot;][graph storage=&quot;phone.png&quot;][endmacro]
[chara_mod name=&quot;Ройстон&quot; storage=&quot;chara/6/Roy.png&quot; time=0]
У вас получилось создать очень надёжный файрвол под названием &quot;Август&quot;.[p]
Это не понравилось правительству. На данный момент оно хочет узнать какие существуют уязвимости и бэкдоры.[p]
Что делать дальше вам сообщит Рейн по телефону. [phone] Вы уже с ней знакомы.[p]
[chara_hide name=&quot;Ройстон&quot; time=2000 wait=true]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="графические-кнопки" tabindex="-1"><a class="header-anchor" href="#графические-кнопки" aria-hidden="true">#</a> Графические кнопки</h3><p>В TyranoScript есть система графических кнопок, и чтобы их вывести используется тег <em>glink</em>. Также данный тег имеет широкий набор параметров. Один из них это color который задаёт цвет кнопки (например: <em>black, gray, white, orange, red, blue, rosy, green, pink</em>). Есть параметры для настройки шрифтов и параметры для изменения общего вида кнопки.</p><p>Добавим в сценарий игры меню состоящее из трёх кнопок имеющие разные стили оформления.</p><blockquote><p>Примечание:</p><p>При создании меню, содержащих графические кнопки, в конце нужно поместить тег <em>[s]</em>, который приостановит игру до тех пор, пока игрок не сделает выбор.</p></blockquote><div class="language-TyranoScript line-numbers-mode" data-ext="TyranoScript"><pre class="language-TyranoScript"><code>;Добавляем графические кнопки
После сказанного, Ройстон оставил Рона одного на скамейке в парке.[p]
*cool_buttons
[glink target=&quot;ponder&quot; text=&quot;Подумать&quot; size=20 width=&quot;300&quot; y=250 color=rosy font_color=0x000000]
[glink target=&quot;try&quot; text=&quot;Отдохнуть&quot; size=20 width=&quot;300&quot; y=300 color=blue]
[glink target=&quot;resume_adventure&quot; text=&quot;Продолжить&quot; size=20 width=&quot;300&quot; y=350 color=gray]
[s]
*ponder
Рон задумался о том что узнал и как поступить дальше.[p] [jump target=*resume_adventure]
*try
Рон попытался забыть всё что произошло, но у него это не получалось.[p]
*resume_adventure
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="грандиозныи-финал-с-использованием-live2d" tabindex="-1"><a class="header-anchor" href="#грандиозныи-финал-с-использованием-live2d" aria-hidden="true">#</a> Грандиозный финал с использованием Live2D</h3><p>Перед тем как перейти от TyranoBuilder к <em>Twine</em>, покажем игроку прощальное сообщение. Так же добавим самый распространённый эффект в визуальных новеллах – землетрясение, применив тег <em>quake</em>, спрячем диалог при помощи тега <em>position</em>, и в завершение, покажем Live2D персонажа.</p>`,49),P={href:"https://www.live2d.com/en/learn/sample/",target:"_blank",rel:"noopener noreferrer"},B=s(`<p>Напомним, чтобы добавить Live2D в TyranoBuilder нужно подключить соответствующий плагин выбрав пункт меню <em>&quot;Project\\Add-In Components&quot;</em>, и указать галочку напротив <em>Live2D Components</em>. Если понадобиться показать компоненты Live2D, на панели компонентов выберите пункт меню <em>&quot;Project\\Customize Tool Area&quot;</em>, где на вкладке <em>Components</em> найдите Live2D и поставьте галочку, после чего нажмите кнопку <em>&quot;Apply&quot;</em>. Не забудьте подгрузить модель Live2D, выбрав на верхней панели инструментов иконку <em>&quot;Live2D&quot;</em>. Далее в окне <em>&quot;Live 2D Model Settings&quot;</em> нажав кнопку <em>&quot;Add a Live2D Model&quot;</em>, найдите файл с расширением <em>.model3.json</em>.</p><p>Теперь всё готово, чтобы продолжить создавать игру:</p><div class="language-TyranoScript line-numbers-mode" data-ext="TyranoScript"><pre class="language-TyranoScript"><code>Поздравляю! Вы подошли к концу изучения данной части обучающей игры.[p]
[position opacity=0][quake count=3 time=200 hmax=20]
[live2d_new name=&quot;hiyori_pro_t11&quot; model_id=&quot;hiyori_pro_t11&quot;]
[live2d_show name=&quot;hiyori_pro_t11&quot;]
[live2d_mod name=&quot;hiyori_pro_t11&quot; x=0.7 y=-0.5]
[live2d_motion name=&quot;hiyori_pro_t11&quot; mtn=&quot;Idle&quot; no=0]
[wait time=&quot;2000&quot;]
[live2d_motion name=&quot;hiyori_pro_t11&quot; mtn=&quot;FlickUp&quot; no=0]
[mtext text=&quot;Поздравляю!&quot; layer=2 size=48 x=680 y=160 in_effect=&quot;bounceIn&quot; out_effect=&quot;hinge&quot;]
[live2d_mod name=&quot;hiyori_pro_t11&quot; scale=2]
[live2d_fadeout name=&quot;hiyori_pro_t11&quot; time=4000]
[wait time=&quot;3000&quot;] [close ask=false]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Как видно из кода для работы с Live2D используется много тегов (см. Таблицу 7-20). Сперва модель определяется и отображается с помощью тегов <em>live2d_new</em> и <em>live2d_show</em>. Затем задаётся позиционирование тегом <em>live2d_mod</em>. Далее тегом <em>live2d_motion</em> устанавливается тип анимации <em>Idle</em>, а потом <em>FlickUp</em>.</p><p>После чего тегом <em>mtext</em> выводится прощальный анимированный текст, а модель Live2D увеличивается в два раза и плавно исчезает. В конце при помощи тега <em>close</em> игра закрывается, но так как параметр <em>ask</em> равен false закрывается без подтверждения.</p><p><strong>Таблица 7-20.</strong> Теги для работы с Live2D.</p><table><thead><tr><th>Тег</th><th>Описание</th><th>Пример(ы)</th></tr></thead><tbody><tr><td><em>[live2d_new]</em></td><td>Загружает модель Live2D.<br>Параметры:<br><em>name</em> - имя модели;<br><em>model_id</em> - идентификатор модели;<br><em>idle</em> – имя позы модели;<br><em>scale</em> – масштаб модели;<br><em>x</em> и <em>y</em> – координаты модели;</td><td>[live2d_new name=&quot;haru&quot; model_id=&quot;Haru&quot;]<br>[live2d_new name=&quot;haru&quot; model_id=&quot;Haru&quot; y=-0.8 x=-0.3 scale=2.5]</td></tr><tr><td><em>[live2d_show]</em></td><td>Отображает модель на игровом экране.</td><td>[live2d_show name=&quot;haru&quot; y=-0.8 x=-0.3 scale=2.5]</td></tr><tr><td><em>[live2d_hide]</em></td><td>Скрывает модель.</td><td>[live2d_hide name=&quot;haru&quot;]</td></tr><tr><td><em>[live2d_expression]</em></td><td>Изменение выражения лица модели. <br>Параметр <em>expression</em> - выражение лица.</td><td>[live2d_expression name=&quot;haru&quot; expression=&quot;f03&quot;]</td></tr><tr><td><em>[live2d_motion]</em></td><td>Переключает позу модели. <br>Параметры:<br><em>mtn</em> - поза модели; <br><em>no</em> - индекс подгруппы позы.</td><td>[live2d_motion name=&quot;haru&quot; mtn=&quot;Test&quot; no=0]</td></tr><tr><td><em>[live2d_mod]</em></td><td>Модифицирует модель. <br>Параметры:<br><em>name</em> - имя модели;<br><em>idle</em> – имя позы модели; <br><em>scale</em> – масштаб модели;<br><em>x</em> и <em>y</em> – координаты модели;</td><td>[live2d_mod name=&quot;haru&quot; scale=1]</td></tr><tr><td><em>[live2d_fadein]</em></td><td>Плавно отображает модель. <br>Параметры:<br><em>time</em> - время появления;<br><em>wait</em> – следует ли ждать окончание анимации эффекта;</td><td>[live2d_fadein time=2000]</td></tr><tr><td><em>[live2d_fadeout]</em></td><td>Скрывает модель с эффектом затухания. <br>Параметры:<br><em>time</em> - время затухания;<br><em>wait</em> – следует ли ждать окончание анимации эффекта;</td><td>[live2d_fadeout time=2000]</td></tr></tbody></table><h3 id="еще-теги" tabindex="-1"><a class="header-anchor" href="#еще-теги" aria-hidden="true">#</a> Ещё теги</h3>`,8);function D(R,$){const a=d("ExternalLinkIcon");return l(),o("div",null,[p,n("table",null,[u,n("tbody",null,[m,c,v,b,h,n("tr",null,[g,n("td",null,[e("Отображает текст с анимацией. Имеет множество различных эффектов."),k,e("Параметры: "),q,e("."),y,e("Демонстрацию в реальном времени можно посмотреть на "),n("a",f,[e("https://tyrano.jp/mtext/"),t(a)]),e(".")]),_]),w,x,T,j,S])]),I,n("p",null,[e("Для реализации данной части игры нам понадобиться модель Live2D, которую можно бесплатно скачать по ссылке "),n("a",P,[e("https://www.live2d.com/en/learn/sample/"),t(a)]),e(". Для демонстрации воспользуемся моделью Хиёри Момосе.")]),B])}const F=i(r,[["render",D],["__file","chapter_7.html.vue"]]);export{F as default};
