import{_ as i,M as d,p as a,q as l,R as e,t as o,N as r,a1 as n}from"./framework-5866ffd3.js";const m={},p=n('<h1 id="глава-6-запускаем-на-популярных-платформах" tabindex="-1"><a class="header-anchor" href="#глава-6-запускаем-на-популярных-платформах" aria-hidden="true">#</a> Глава 6. Запускаем на популярных платформах</h1><p>Рассматриваемое программное обеспечение в этой книге не только многофункциональное и удобное, но и имеет возможность запускаться на разных платформах. Как это сделать мы подробно рассмотрим в этой главе.</p><h2 id="ren-py-и-персональные-компьютеры" tabindex="-1"><a class="header-anchor" href="#ren-py-и-персональные-компьютеры" aria-hidden="true">#</a> Ren’Py и персональные компьютеры</h2><p>Ren’Py &quot;из коробки&quot; развертывается на Windows, macOS и Linux без каких-либо настроек. Для этого на лаунчере Ren’Py в разделе <em>&quot;Действия с проектом&quot;</em> выберите <em>&quot;Построить дистрибутивы&quot;</em>. Далее указываете для каких платформ вы хотите собрать игру и нажимаете <em>&quot;Построить&quot;</em>. В таблице 6-1 указан список вариантов сборки и для чего они предназначены.</p><p><strong>Таблица 6-1.</strong> Варианты сборки игры для персональных операционных систем в Ren’Py</p><table><thead><tr><th>Вариант</th><th>Описание</th></tr></thead><tbody><tr><td><em>PC: Windows and Linux</em></td><td>Создаст zip-файл для 32-разрядных и 64-разрядных версий Windows и Linux.</td></tr><tr><td><em>Linux</em></td><td>Создаст TAR.BZ2 файл для 32- и 64-разрядной версии Linux</td></tr><tr><td><em>Macintosh</em></td><td>Создаст zip-файл для macOS на базе процессора Intel и Apple Silicon</td></tr><tr><td><em>Windows</em></td><td>Создает zip-файл для 32- и 64-битной версии операционный системы Windows</td></tr><tr><td><em>Windows, Mac, Linux for Markets</em></td><td>Создаст файлы для Windows, macOS и Linux, необходимые для онлайн-распространения через Itch.io и Steam. Эти файлы не предназначены для прямого запуска</td></tr></tbody></table><h3 id="минимальные-системные-требования" tabindex="-1"><a class="header-anchor" href="#минимальные-системные-требования" aria-hidden="true">#</a> Минимальные системные требования</h3><p>Игры созданные на основе Ren’Py в основном не требовательны к ресурсам компьютерной системы, но всё же имеют определённые минимальный требования (см. Таблицу 6-2). Однако, параметры могут измениться, например, если в игре использовать видео высокого разрешения, для которого потребуется значительно больше ресурсов компьютера.</p><p>На данный момент любой средний компьютер способен запустить любую игру созданную на Ren’Py, а это 4 гигабайта (ГБ) системной памяти (т. е. ОЗУ) и хороший двухъядерный процессор, но могут быть и исключения.</p><p>Так как для визуализации Ren’Py использует <em>OpenGL</em> и <em>DirectX</em>, соответственно видеокарта должна поддерживать, как минимум OpenGL 3.0 или DirectX 11. Следовательно, нужно учитывать и версию операционной системы — это <em>Windows 7</em> и выше.</p><p><strong>Таблица 6-2.</strong> Минимальные требования для игр на Ren’Py</p><table><thead><tr><th>Платформа</th><th>Версия ОС</th><th>Процессор</th><th>ОЗУ</th><th>Графика</th></tr></thead><tbody><tr><td><em>Windows</em></td><td>7 и выше</td><td>2,0 ГГц, 64-битный Intel-совместимый</td><td>2.0 ГБ</td><td>OpenGL 3.0 или DirectX 11</td></tr><tr><td><em>macOS</em></td><td>10.10 и выше</td><td>2,0 ГГц, 64-битный Intel-совместимый</td><td>2.0 ГБ</td><td>OpenGL 3.0</td></tr><tr><td><em>Linux</em></td><td>Ubuntu 16.04 и выше</td><td>2,0 ГГц, 64-битный Intel-совместимый</td><td>2.0 ГБ</td><td>OpenGL 3.0</td></tr></tbody></table><p>Что касается требования к объёму жёсткого диска, то он зависит от размера вашей игры. Если использовать изображения, аудио и видео очень высокого качества, соответственно и игра будет расти в размерах. Однако, необходимо найти компромисс между размером и качеством медиа файлов, чтобы игра получилась качественной и занимала как можно меньший размер на жестком диске.</p><h3 id="иконки-для-персонального-компьютера" tabindex="-1"><a class="header-anchor" href="#иконки-для-персонального-компьютера" aria-hidden="true">#</a> Иконки для персонального компьютера</h3><p>Чтобы задать значок для игры, поместите файл с расширением icon.ico для Windows и icon.icns для macOS в корневую папку игры. Если ваша иконка сохранена в PNG формате, то её нужно преобразовать в формат иконки, простое переименования файла здесь не подойдет. В Интернете имеется множество бесплатных онлайн-сервисов для такой операции.</p><h2 id="ren-py-для-мобильных-устроиств" tabindex="-1"><a class="header-anchor" href="#ren-py-для-мобильных-устроиств" aria-hidden="true">#</a> Ren’Py для мобильных устройств</h2><p>Помимо поддержки персональных компьютеров, Ren’Py может собрать игру для мобильных устройств на базе iOS и Android. Однако данный процесс более сложнее и будет подробно рассмотрен в дальнейших главах.</p><h3 id="развертываем-на-android-е" tabindex="-1"><a class="header-anchor" href="#развертываем-на-android-е" aria-hidden="true">#</a> Развертываем на Android-е</h3><p>Ren’Py поддерживает сборку игр для Android. Однако могут появиться не предсказуемые баги, и как следствие игры для этой операционной системы нужно тестировать более тщательно.</p><p>Первым шагом для отладки игры на Android является загрузка и установка <em>Ren’Py Android Packaging Tool (RAPT)</em>. Для этого на лаунчере нажмите <em>Android</em> в разделе «Действия с проектом», после чего вам будет предложено загрузить вышеупомянутый инструмент, если он ещё не был установлен.</p>',20),s=e("em",null,"Java Development Kit",-1),u={href:"https://adoptopenjdk.net/releases.html?variant=openjdk8&jvmVariant=hotspot",target:"_blank",rel:"noopener noreferrer"},h=e("p",null,"Теперь нужно настроить компьютер и Android для запуска и отладки игры на устройстве:",-1),c=e("li",null,[o("На Android устройстве откройте "),e("em",null,'"Настройки\\Параметры разработчика"'),o(" и включите "),e("em",null,[e("strong",null,"отладку по USB")]),o(".")],-1),q=e("strong",null,"Настройте соединение Android Debug Bridge (ADB)",-1),y=e("em",null,"apt-get install adb",-1),P={href:"https://developer.android.com/studio/run/oem-usb",target:"_blank",rel:"noopener noreferrer"},g=n("<li>Далее <strong>устанавливаем SDK</strong> зайдя в <em>&quot;Действие с проектом\\Android\\Установить SDK&quot;</em>. После установки SDK вам предложат создать <em>цифровой ключ</em>, который в дальнейшем будет использоваться для подписи пакетов, продаваемых на интернет-площадках, например, <em>Google Play</em>.</li><li><strong>Укажите информацию о вашей игре</strong> выбрав <em>&quot;Действие с проектом\\Android\\Настроить&quot;</em>.</li><li>Когда игра создана и настроена <strong>подключите Android устройство к компьютеру</strong> и выберите <em>&quot;Действие с проектом\\Android\\Собрать и установить&quot;</em>.</li>",3),b=n('<h3 id="иконки-и-экран-заставка" tabindex="-1"><a class="header-anchor" href="#иконки-и-экран-заставка" aria-hidden="true">#</a> Иконки и экран-заставка</h3><p>Чтобы задать иконки для приложения, и заставку загрузки разместите соответствующие изображения в корневом каталоге игры.</p><p>Иконка состоит из двух изображений переднего плана <em>android-icon_foreground.png</em> с прозрачным фоном и из фонового изображения <em>android-icon_background.png</em>. Размер этих иконок должен быть 432 x 432 пикселя. При сборке приложения Ren&#39;Py преобразует эти файлы в подходящий размер для каждого устройства.</p><p>При первом запуске игры на Android или когда игра загружает дополнительные ресурсы с Google Play используются экраны заставки. Так как эти процессы занимают некоторое время, то хорошим тоном будет задать данные изображения, поместив их в корневую папку игры. Изображение под именем <em>android-presplash.jpg</em>, будет использоваться при загрузке приложения, а изображение <em>android-downloading.jpg</em> при загрузке ресурсов.</p><h3 id="сочетания-клавиш-в-android" tabindex="-1"><a class="header-anchor" href="#сочетания-клавиш-в-android" aria-hidden="true">#</a> Сочетания клавиш в Android</h3><p>При запуске игры Ren&#39;Py на Android кнопки имеют следующие назначение:</p><ul><li><strong>Домой</strong>: возвращает вас на главный экран Android, приостанавливает игру и автоматически сохраняет её состояние.</li><li><strong>Увеличение/уменьшение громкости</strong>: используется для регулировки громкости.</li></ul><h3 id="тестирование-android-приложения" tabindex="-1"><a class="header-anchor" href="#тестирование-android-приложения" aria-hidden="true">#</a> Тестирование Android-приложения</h3><p>Для тестирования на портативных устройствах Ren&#39;Py поддерживает три режима эмуляции Android: телефон, планшет и телевизор. Для её запуска выберите &quot;Действие с проектом\\Android\\Эмуляция&quot;, а далее запускаете требуемый тип эмуляции. Для управления игровым процессом используются следующие клавиши: <em>клик мыши</em>, который эмулирует касание, <em>Esc</em> для вызова меню и <em>Page Up</em> для возврата назад, то есть соответствует кнопке &quot;Назад&quot;.</p><p>Рассмотрим режимы эмуляции:</p><ul><li><strong>Телефон</strong>: сенсорное управление имитируется с помощью мыши.</li><li><strong>Планшет</strong>: управление такое же, как и при эмуляции телефона на Android.</li><li><strong>Телевизор</strong>: этот режим эмулирует телевизор на базе операционной системы Android. Клавиатура привязана к пульту</li><li>дистанционного управления, где клавиши со стрелками выполняют навигацию, кнопка <em>Enter</em> это выбор, а <em>Esc</em> вызывает</li><li>меню. Кроме того, в этом режиме отображаются границы «Небезопасной зоны», в пределах которой контент может</li><li>отображаться не на всех телевизорах.</li></ul><h3 id="развертываем-на-ios" tabindex="-1"><a class="header-anchor" href="#развертываем-на-ios" aria-hidden="true">#</a> Развертываем на iOS</h3><p>Развертывать Ren’Py проекты для платформ на iOS можно только на персональном компьютере под управлением macOS. Так как поддержка данной платформы находится на стадии разработки, выпушенные игры на основе Ren&#39;Py не соответствуют установленным <em>Apple App Store</em> стандартам. Однако, многие игры проходят эту проверку и попадают в Apple App Store. Как совет, ваш игра не должна содержать технических проблем, и содержать как можно меньше насилия и обнаженных сцен.</p><p>Для тестирования Ren&#39;Py поддерживает два режима эмуляции это iPhone и iPad. Оба режима имитируют работу с сенсорным экраном, поэтому управление происходит при помощи мыши.</p><p>Чтобы добавить отладку в Ren’Py на iOS, сперва, нужно загрузить программное обеспечение <em>renios</em>. Для этого перейдите на лауйнчере Ren’Py &quot;Действие с проектом\\iOS&quot;, где вам будет предложено загрузить дополнительно программное обеспечение, если оно ещё не было установлено. После завершения установки станут доступны новый функционал характерный для устройств iOS, особенно такие как <em>эмуляция</em> iPhone и iPad.</p><blockquote><p><strong>Примечание:</strong></p><p>Хотя эмулятор позволяет увидеть, как работает ваш проект на платформе iOS, но ни что не заменит полноценное тестирование на реальном устройстве.</p></blockquote><h3 id="xcode-и-ios" tabindex="-1"><a class="header-anchor" href="#xcode-и-ios" aria-hidden="true">#</a> Xcode и iOS</h3><p>Следующем шагом трудоёмкого процесса отладки игр на iOS будет установка <em>интегрированной среды разработки (IDE) Xcode</em> от Apple. Если вы пользуетесь Mac, следовательно, у вас уже должен быть Apple ID. Тогда, просто скачиваем Xcode с App Store на свой Mac и устанавливаем его.</p><p>Выполним ещё несколько шагов, чтобы развернуть проект Ren’Py на iOS.</p><ol><li><strong>Зарегистрируйтесь в программе <em>Apple Developer Program</em></strong>, перейдя по ссылке: https://developer.apple.com/programs/enroll/. Будьте готовы заплатить ежегодно 99 долларов США за участия в данной программе.</li><li><strong>Через лаунчер Ren’Py создайте новый проект для Xcode</strong>. Для этого выберите <em>&quot;Действие с проектом\\iOS\\Выбрать Директорию Проектов Xcode&quot;</em>. Затем <em>&quot;Создать Проект Xcode&quot;</em>. Имя проекта будет автоматически взято с названия игры в Ren’Py.</li><li>Далее для <strong>открытия проекта</strong> нажмите <em>&quot;Запустить Xcode&quot;</em>.</li><li><strong>Добавьте свой Apple ID в Xcode</strong>. Выбираем пункт меню <em>&quot;Xcode\\Preferences&quot;</em> и переходим на вкладку <em>&quot;Accounts&quot;</em>. Используя кнопку плюс в нижней части окна, добавляем свой Apple ID к проекту.</li><li><strong>Назначьте свой проект команде</strong>. В Xcode выбираем проект, переходим на вкладку <em>&quot;General&quot;</em>, находим раздел <em>&quot;Signing&quot;</em>. Убеждаемся, что флажок <em>&quot;Automatically manage signing&quot;</em> установлен, и по надобности выбираем команду в поле <em>&quot;Team&quot;</em>.</li><li><strong>Запускаем игры на iOS устройстве</strong>. Подключите устройство к Mac. После запуска проекта на реальном устройстве, Xcode настроит все необходимые подписи для развертывания приложения.</li><li><strong>Экспортируйте <em>сертификаты</em> и <em>профили</em></strong>. Для этого выбираем пункт меню <em>&quot;Xcode\\Preferences&quot;</em> и переходим на вкладку <em>&quot;Accounts&quot;</em>. Далее внизу окна нажимаем шестерёнку, после чего в выпавшем списке выбираем <em>&quot;Export Accounts&quot;</em>.</li><li><strong>В открывшемся окне введите имя файла в поле <em>&quot;Save As&quot;</em></strong> и пароль в поля <em>&quot;Password&quot;</em> и <em>&quot;Verify&quot;</em>, после чего нажмите кнопку <em>&quot;Save&quot;</em>. Теперь сохранённый файл с вашей учетной записью разработчика надежно зашифрован и защищен.</li></ol><p>Если вам понадобиться восстановить учетную запись разработчика в Xcode, то просто на вкладке &quot;Accounts&quot; выберите <em>&quot;Import Accounts&quot;</em> укажите ранее сохранённый файл и нажмите <em>&quot;Open&quot;</em>.</p><h3 id="обновляем-ваши-ios-проекты" tabindex="-1"><a class="header-anchor" href="#обновляем-ваши-ios-проекты" aria-hidden="true">#</a> Обновляем ваши iOS-проекты</h3><p>Если были внесены изменения в проект Ren’Py, то чтобы они появились в проекте Xcode, нужно его обновить, выбрав на лаунчере Ren’Py <em>&quot;Действие с проектом\\iOS\\Обновить Проект Xcode&quot;</em>. Однако, если вы выполните обновление Ren’Py, то придется повторно пересоздать проект Xcode, для этого используйте инструкцию из предыдущего раздела.</p><h3 id="иконки-и-экран-заставка-для-ios" tabindex="-1"><a class="header-anchor" href="#иконки-и-экран-заставка-для-ios" aria-hidden="true">#</a> Иконки и экран-заставка для iOS</h3><p>Добавления иконок и создание экранов-загрузки для iOS происходит исключительно в Xcode, а их размеры стандартизированы (см. Таблицу 6-3).</p><p><strong>Таблица 6-3.</strong> Спецификация иконок для приложений Apple</p><table><thead><tr><th>Платформа</th><th>Разрешение (в пикселях)</th></tr></thead><tbody><tr><td><em>iPhone</em></td><td>180 x 180 и 120 x 120</td></tr><tr><td><em>iPad Pro</em></td><td>167 x 167</td></tr><tr><td><em>iPad и iPad Mini</em></td><td>152 x 152</td></tr><tr><td><em>Apple App Store</em></td><td>1024 x 1024</td></tr></tbody></table><blockquote><p><strong>Примечание:</strong></p><p>В сети есть множество бесплатных сервисов для создания иконок из изображений. Например, сервис <em>App Icon Generator</em> (https://appicon.co).</p></blockquote><p><em>Экран загрузки</em> в Apple, это обязательный элемент при разработке программного обеспечения, имеющий стандартные размеры (см. Таблице 6-4).</p><blockquote><p><strong>Примечание:</strong></p><p>Разрешение для горизонтального расположения экрана пропорционально вертикальному (например, с 1125 x 2436 на 2436 x 1125).</p></blockquote><p><strong>Таблица 6-4.</strong> Спецификация размеров экрана-загрузки для приложений Apple</p><table><thead><tr><th>iOS-устройство</th><th>Разрешение (в пикселях)</th></tr></thead><tbody><tr><td><em>iPhone 15</em></td><td>1179 × 2556</td></tr><tr><td><em>iPhone 12, iPhone 13, iPhone 14</em></td><td>1170 × 2532</td></tr><tr><td><em>iPhone 11</em></td><td>828 × 1792</td></tr><tr><td><em>iPhone X</em></td><td>1125 x 2436</td></tr><tr><td><em>iPhone 8, iPhone 7, iPhone 6s</em></td><td>750 x 1334</td></tr><tr><td><em>iPhone SE</em></td><td>640 x 1136</td></tr><tr><td><em>iPad Pro (12.9&quot;)</em></td><td>2048 x 2732</td></tr><tr><td><em>iPad Pro (11&quot;)</em></td><td>1668 x 2388</td></tr><tr><td><em>iPad (9.7&quot;)</em></td><td>1536 x 2048</td></tr></tbody></table><p>Чтобы изменить экран-загрузки, нужно в Xcode добавить изображение в папку <em>Assets.xcassets</em>, после чего выбираем <em>LaunchScreen.storyboard</em>. Далее, используя конструктор, добавляем элемент <em>UIImageView</em>, где в свойстве <em>Image</em> указываем загруженное изображение.</p><h2 id="запускаем-на-chrome-os-и-в-браузере" tabindex="-1"><a class="header-anchor" href="#запускаем-на-chrome-os-и-в-браузере" aria-hidden="true">#</a> Запускаем на Chrome OS и в браузере</h2><p><em>Chrome OS</em> — это операционная система на базе Linux от компании Google, где <em>Chrome</em> использует в качестве основного браузера. Ноутбуки, работающие под управлением данной операционной системы, называются <em>Хромбук (Chromebook)</em>. Одной из особенностей Chrome OS это поддержка Android приложений. Поэтому собрав игру Ren’Py для Android, можно запустить и протестировать на Chrome OS.</p><p>Если игра доступна в <em>Google Play</em>, то выполните следующие шаги:</p><ol><li>Нажмите на время в правом нижнем углу экрана.</li><li>Выберите значок <em>настроек</em> имеющий вид шестерёнки.</li><li>В разделе Google Play нажмите <em>&quot;Включить&quot;</em> рядом с надписью <em>&quot;Устанавливайте приложения и игры из Google Play на устройство Chromebook&quot;</em>.</li><li>В открывшемся окне выберите <em>&quot;Ещё&quot;</em>.</li><li>Чтобы принять Условия использования, следуйте инструкциям на экране.</li></ol><blockquote><p><strong>Примечание</strong>:</p><p>Чтобы устанавливать приложения Android на устройство Chromebook, обновите ChromeOS до последней версии. Если такой параметр не появится, значит ваше устройство не поддерживает приложения Android.</p></blockquote><ol start="7"><li>Запустите Google Play, найдите нужное приложение и установите его.</li></ol><p>Когда игра находится на стадии разработки, и вы хотите её протестировать на Chrome OS, то выполните сборку проекта для Android. Далее, полученный .APK файл нужно установить на Chrome OS, но для этого понадобиться включить <em>режим разработчика</em>, выполнив следующую инструкцию:</p><ol><li>Нажмите на время в правом нижнем углу экрана Chromebook.</li><li>Выберите <em>&quot;Настройки\\Дополнительные\\Для разработчиков&quot;</em>.</li><li>Рядом с надписью <em>&quot;Среда разработки Linux&quot;</em> выберите <em>&quot;Включить&quot;</em>.</li><li>Следуйте инструкциям на экране.</li><li>Снова нажмите на время на устройстве Chromebook.</li><li>Выберите <em>&quot;Настройки\\Дополнительные\\Для разработчиков&quot;</em>.</li><li>На панели слева выберите <em>&quot;Linux\\Разработка приложений для Android&quot;</em>.</li><li>Нажмите <em>&quot;Включить отладку с ADB&quot;</em>.</li><li>Выберите <em>&quot;Перезапустить&quot;</em>.</li><li>Нажмите <em>&quot;Подтвердить&quot;</em> и войдите в аккаунт.</li></ol><p>Теперь можно установить .APK файл:</p><ol><li>Откройте терминал.</li><li>Если не установлен, то установите ADB, выполнив следующую команду: <em>sudo apt install adb</em>.</li><li>Подключитесь к устройству с помощью следующей команды: <em>adb connect arc</em>.</li><li>Появится диалоговое окно авторизации для отладки по USB. Подтвердите, нажав кнопку <em>&quot;ОК&quot;</em>.</li><li>Установите приложение из терминала, применив команду: <em>adb install [путь к вашему APK]</em>.</li><li>Запускаете приложение через <em>&quot;Панель запуска&quot;</em>.</li></ol><p>Ещё одной возможностью Ren&#39;Py является запуск игр в веб-браузере. Для этого существует отдельная версии Ren&#39;Py, скомпилированная при помощи <em>WebAssembly</em>.</p><p>Чтобы собрать игру для браузера, нужно:</p><ol><li>На лаунчере Ren&#39;Py выбрать <em>&quot;Действие с проектом\\Web&quot;</em>. Если дополнительное программное обеспечение ещё не установлено установите его.</li><li>Нажать <em>&quot;Построить приложение для сети&quot;</em>.</li><li>После сборки запустите приложение выбрав <em>&quot;Открыть в браузере&quot;</em>.</li></ol><h2 id="лицензия-на-android-и-ios-в-ren-py" tabindex="-1"><a class="header-anchor" href="#лицензия-на-android-и-ios-в-ren-py" aria-hidden="true">#</a> Лицензия на Android и iOS в Ren’Py</h2><p>Ren’Py включает в себя множество сторонних библиотек и технологий, большинство из которых распространяются по лицензии <em>GNU Lesser/Library General Public License</em>. Сам Ren&#39;Py распространяется под лицензией <em>MIT</em>. Про это на всякий случай нужно будет упомянуть в описании вашей игры. Например, если вы используете в своём проекте <em>Android Packaging Tool (RAPT)</em> и iOS, то добавьте в документацию вашей игры следующие строки:</p>',48),A={href:"https://www.renpy.org/doc/html/license.html",target:"_blank",rel:"noopener noreferrer"},x=n('<h2 id="ren-py-и-raspberry-pi" tabindex="-1"><a class="header-anchor" href="#ren-py-и-raspberry-pi" aria-hidden="true">#</a> Ren’Py и Raspberry Pi</h2><p>С 2012 года рынок начинают заполнять так называемые мини ПК. Одним из таких портативных устройств является <em>Raspberry Pi</em>, цена которого в основном не превышает 40 долларов. На данный момент он всё больше и больше становится популярнее, и вы в свою очередь можете извлечь из этого выгоду, выпустив игру Ren’Py для данной платформы.</p><p>Но при портировании проекта на Raspberry Pi, вы должны учитывать ограничения данного устройства. Необходимо до предела минимизировать аудио, видео и изображения. Если нужно уберите некоторые сцены из игры, то есть урежьте игру, так как простой порт с персонального компьютера не является хорошей идеей.</p><h3 id="настроика-pi-для-ren-py" tabindex="-1"><a class="header-anchor" href="#настроика-pi-для-ren-py" aria-hidden="true">#</a> Настройка Pi для Ren’Py</h3><p>Так как Raspberry Pi работает под управлением <em>Raspberry Pi OS</em>, основанной на Debian GNU/Linux, то и подход в работе будет как с операционной системой Linux на базе процессора с архитектурой ARM. Было продемонстрировано, что Ren&#39;Py может работать на Raspberry Pi 3B, что касается других моделей работа не гарантируется. Перед тем как начать использовать Ren&#39;Py необходимо установить следующие настройки, выполнив команду в терминале <em>sudo raspi-config</em>:</p><ul><li>Разделение памяти (Memory Split): 256 МБ</li><li>Разрешение (Resolution): 1280x720 или меньше</li><li>Драйвер GL (GL Driver): GL (Fake KMS)</li></ul>',6),_={href:"https://www.renpy.org/latest.html",target:"_blank",rel:"noopener noreferrer"},S=e("em",null,'"Download ARM Linux (Raspberry Pi and Chromebook) SDK tar.bz2"',-1),R=n('<h2 id="tyranobuilder-и-персональные-компьютеры" tabindex="-1"><a class="header-anchor" href="#tyranobuilder-и-персональные-компьютеры" aria-hidden="true">#</a> TyranoBuilder и персональные компьютеры</h2><p>У TyranoBuilder имеется очень удобный инструмент для экспорта игр на разные платформы, особенно для Windows, macOS и Web.</p><p>Для этого в верхнем меню TyranoBuilder выбираем <em>&quot;Project\\Export Game (Проект\\Экспортировать игру)&quot;</em>. В открывшемся окне в поле <em>&quot;Export Type (Тип экспорта)&quot;</em> указываем для какой платформы собрать игру: <em>&quot;Browser Game (Игра для браузера)&quot;</em>, <em>&quot;Windows&quot;</em> или <em>&quot;Mac&quot;</em>, после чего подтверждаем экспорт нажав на кнопку <em>&quot;Output game (Выпустить игру)&quot;</em>. Через несколько секунд работы приложения, вам будет предложено открыть папку с созданной игрой. Вот в принципе и все, ваша игра готова к распространению.</p><blockquote><p><strong>Примечание</strong>:</p><p>Какой бы не была игра сложной или простой, всегда рекомендуется добавить в неё файлы с руководством и лицензией, а формат файлов предпочтительно использовать PDF.</p></blockquote><h3 id="tyranobuilding-и-ios" tabindex="-1"><a class="header-anchor" href="#tyranobuilding-и-ios" aria-hidden="true">#</a> TyranoBuilding и iOS</h3><p>Развернуть игру для мобильного устройства на много сложнее, чем для персонального компьютера. Первый шаг одинаков как для iOS, так и для Android. В главном меню TyranoBuilder выбираем <em>&quot;Project\\Export Game (Проект\\Экспортировать игру)&quot;</em>. В открывшемся окне в поле тип экспорта указываем iOS Application и публикуем игру. Теперь переходим к сложному.</p><p>Развертывание игры для iOS на TyranoBuilder очень похоже на развертывание на Ren’Py, для этого понадобится:</p><ul><li>Ноутбук или персональный компьютер Mac.</li><li>Учетная запись разработчика Apple.</li><li>Xcode.</li></ul><p>Не забудьте в Xcode настроить <em>профиль</em> и <em>сертификат</em>, как это делалось в предыдущих разделах.</p><p>Учтите следующие ограничения при отладке игры на iOS: все видеофайлы должны быть в формате mp4, все аудиофайлы иметь формат m4a или mp3, не используйте японские символы в именах файлов. Иначе, ваш проект не сможет запуститься.</p>',10),O=e("em",null,"TyranoPlayer",-1),f={href:"http://tyrano.jp/download/player/TyranoPlayerFramework_ios_v112.zip",target:"_blank",rel:"noopener noreferrer"},k=e("p",null,[o("После этого переходим в папку TyranoPlayer и копируем файлы игры, полученные после экспорта игры из TyranoBuilder, в папку "),e("em",null,"game"),o(". Находим файл "),e("em",null,"TyranoPlayerFramework.xcodeproj"),o(" и открываем его в Xcode.")],-1),w=e("p",null,"Следующим шагом выполняем тестирование игры. Для этого выбираем в верхней части интерфейса Xcode эмулятор для тестирования на iPhone или iPad. Если хотите использовать реальное устройство, то подключите его к компьютеру и выберите из списка эмуляторов. Далее нажимаем кнопку запуск.",-1),L=e("h3",{id:"tyranobuilding-и-android",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#tyranobuilding-и-android","aria-hidden":"true"},"#"),o(" TyranoBuilding и Android")],-1),T={href:"https://developer.android.com/studio",target:"_blank",rel:"noopener noreferrer"},G={href:"https://tyrano.jp/download/player/TyranoPlayerFramework_android_v121.zip",target:"_blank",rel:"noopener noreferrer"},X=n('<p>Теперь выполним экспорт игры в TyranoBuilder, выбрав <em>&quot;Project\\Export Game (Проект\\Экспортировать игру)&quot;</em>.</p><p>Не забудьте, при экспорте игры для Android, учесть те же ограничения что и для iOS, а именно: все видеофайлы должны быть в формате mp4, все аудиофайлы иметь формат m4a или mp3, не использовать японские символы в именах файлов.</p><p>Далее запускаем Android Studio. В главном меню выбираем <em>&quot;File\\New\\New Project (Файл\\Новый\\Новый Проект)&quot;</em>. В появившемся окне на вкладке <em>&quot;Phone and Tablet (Телефон и планшет)&quot;</em> выбираем <em>&quot;Empty Views Activity (Пустая Активность)&quot;</em>, после чего нажимаем кнопку <em>&quot;Next (Далее)&quot;</em>.</p><p>В следующем окне указываем параметры для активности:</p><ul><li>Имя (Name): &quot;My Application&quot;</li><li>Имя пакета (Package name): &quot;jp.tyrano.tyranoplayerframework&quot;</li><li>Место хранения проекта (Save location): &quot;Путь к папке, куда нужно сохранить проект&quot;</li><li>Язык (Language): &quot;Java&quot;</li><li>Минимальный SDK (Minimum SDK): &quot;API 19 («KitKat»; Android 4.4)&quot;</li></ul><p>В конце нажимаем кнопку <em>&quot;Finish (Готово)&quot;</em>. Android Studio в течение нескольких минут сгенерирует новый проект. Теперь, нужно открыть проект в проводнике, для этого выберите на панеле <em>&quot;Project (Проект)&quot;</em> проект <em>&quot;app&quot;</em>, вызовите контекстное меню и перейдите в пункт меню <em>&quot;Open In\\Explorer (Открыть в\\Проводник)&quot;</em>.</p><p>Когда откроется окно проводника, перейдите в каталог <em>/app/src</em> и удалите папку <em>main</em>. Далее откройте папку с распакованным TyranoPlayer, выберите папку main и скопируйте её вместо удаленной папки, а именно в /app/src проекта Android Studio.</p><p>Осталось добавить саму игру в проект. Копируем файлы игры полученные после экспорта игры из TyranoBuilder в папку <em>/main/assets/</em>, которые находятся в корневой папке программы под названием <em>android_xxxxxxx_xxxxxx</em>.</p><p>После проделанных операций, вернитесь в Android Studio, и нажмите кнопку <em>воспроизведения (Run ‘app’)</em> на панеле инструментов. Если игра запустилась, поздравляем вас, но если при сборке проекта возникли сообщения об ошибках, то их можно устранить, щёлкнув по ссылке в сообщении. В результате, если не будет хватать какого-то компонента, он будет установлен или вас перебросит на страницу с документацией, где будет описана данная проблема и способы её решения.</p><blockquote><p><strong>Примечание</strong>:</p><p>Способ сборки проекта, указанный в этом разделе, может отличиться в разных версиях Android Studio, как и возникающие ошибки.</p></blockquote><h3 id="дополнительные-советы-по-android" tabindex="-1"><a class="header-anchor" href="#дополнительные-советы-по-android" aria-hidden="true">#</a> Дополнительные советы по Android</h3>',11);function v(B,D){const t=d("ExternalLinkIcon");return a(),l("div",null,[p,e("p",null,[o("Так же вам понадобится "),s,o(". Ссылку для скачивания можно найти в официальной документации. На данный момент URL-адрес такой: "),e("a",u,[o("https://adoptopenjdk.net/releases.html?variant=openjdk8&jvmVariant=hotspot"),r(t)]),o(".")]),h,e("ol",null,[c,e("li",null,[q,o(" между устройством и персональным компьютером. Для этого подключите устройство к компьютеру, чтобы установить драйвер. MacOS это сделает автоматически. В Linux нужно загрузить пакет выполнив команду "),y,o(". Что касается Windows, следуя инструкции: "),e("a",P,[o("https://developer.android.com/studio/run/oem-usb"),r(t)]),o(", загрузите и установите USB-драйвер.")]),g]),b,e("p",null,[e("em",null,[o("Эта программа содержит лицензионное бесплатное программное обеспечение, включая и лицензию GNU Lesser General Public License. Ознакомиться с полным списком можно по адресу "),e("a",A,[o("https://www.renpy.org/doc/html/license.html"),r(t)]),o(".")])]),x,e("p",null,[o("Далее вам необходимо установить версию SDK для Linux с поддержкой Raspberry Pi. Для этого перейдите на страницу загрузки "),e("a",_,[o("https://www.renpy.org/latest.html"),r(t)]),o(" и выберите "),S,o(".")]),R,e("p",null,[o("Далее загружаем и устанавливаем автономную версию "),O,o(" для iOS по ссылке: "),e("a",f,[o("http://tyrano.jp/download/player/TyranoPlayerFramework_ios_v112.zip"),r(t)])]),k,w,L,e("p",null,[o("Чтобы развернуть игру TyranoBuilder на Android, необходимо установить Android Studio, которую можно скачать по адресу: "),e("a",T,[o("https://developer.android.com/studio"),r(t)]),o(".")]),e("p",null,[o("Затем скачиваем TyranoPlayer для Android по ссылке: "),e("a",G,[o("https://tyrano.jp/download/player/TyranoPlayerFramework_android_v121.zip"),r(t)]),o(".")]),X])}const I=i(m,[["render",v],["__file","chapter_6.html.vue"]]);export{I as default};
