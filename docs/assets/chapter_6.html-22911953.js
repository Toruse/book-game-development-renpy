import{_ as r,M as i,p as a,q as s,R as e,t,N as d,a1 as o}from"./framework-5866ffd3.js";const m={},l=o('<h1 id="глава-6-запускаем-на-популярных-платформах" tabindex="-1"><a class="header-anchor" href="#глава-6-запускаем-на-популярных-платформах" aria-hidden="true">#</a> Глава 6. Запускаем на популярных платформах</h1><p>Рассматриваемое программное обеспечение в этой книге не только многофункциональное и удобное, но и имеет возможность запускаться на разных платформах. Как это сделать мы подробно рассмотрим в этой главе.</p><h2 id="ren-py-и-персональные-компьютеры" tabindex="-1"><a class="header-anchor" href="#ren-py-и-персональные-компьютеры" aria-hidden="true">#</a> Ren’Py и персональные компьютеры</h2><p>Ren’Py &quot;из коробки&quot; развертывается на Windows, macOS и Linux без каких-либо настроек. Для этого на лаунчере Ren’Py в разделе <em>&quot;Действия с проектом&quot;</em> выберите <em>&quot;Построить дистрибутивы&quot;</em>. Далее указываете для каких платформ вы хотите собрать игру и нажимаете <em>&quot;Построить&quot;</em>. В таблице 6-1 указан список вариантов сборки и для чего они предназначены.</p><p><strong>Таблица 6-1.</strong> Варианты сборки игры для персональных операционных систем в Ren’Py</p><table><thead><tr><th>Вариант</th><th>Описание</th></tr></thead><tbody><tr><td><em>PC: Windows and Linux</em></td><td>Создаст zip-файл для 32-разрядных и 64-разрядных версий Windows и Linux.</td></tr><tr><td><em>Linux</em></td><td>Создаст TAR.BZ2 файл для 32- и 64-разрядной версии Linux</td></tr><tr><td><em>Macintosh</em></td><td>Создаст zip-файл для macOS на базе процессора Intel и Apple Silicon</td></tr><tr><td><em>Windows</em></td><td>Создает zip-файл для 32- и 64-битной версии операционный системы Windows</td></tr><tr><td><em>Windows, Mac, Linux for Markets</em></td><td>Создаст файлы для Windows, macOS и Linux, необходимые для онлайн-распространения через Itch.io и Steam. Эти файлы не предназначены для прямого запуска</td></tr></tbody></table><h3 id="минимальные-системные-требования" tabindex="-1"><a class="header-anchor" href="#минимальные-системные-требования" aria-hidden="true">#</a> Минимальные системные требования</h3><p>Игры созданные на основе Ren’Py в основном не требовательны к ресурсам компьютерной системы, но всё же имеют определённые минимальный требования (см. Таблицу 6-2). Однако, параметры могут измениться, например, если в игре использовать видео высокого разрешения, для которого потребуется значительно больше ресурсов компьютера.</p><p>На данный момент любой средний компьютер способен запустить любую игру созданную на Ren’Py, а это 4 гигабайта (ГБ) системной памяти (т. е. ОЗУ) и хороший двухъядерный процессор, но могут быть и исключения.</p><p>Так как для визуализации Ren’Py использует <em>OpenGL</em> и <em>DirectX</em>, соответственно видеокарта должна поддерживать, как минимум OpenGL 3.0 или DirectX 11. Следовательно, нужно учитывать и версию операционной системы — это <em>Windows 7</em> и выше.</p><p><strong>Таблица 6-2.</strong> Минимальные требования для игр на Ren’Py</p><table><thead><tr><th>Платформа</th><th>Версия ОС</th><th>Процессор</th><th>ОЗУ</th><th>Графика</th></tr></thead><tbody><tr><td><em>Windows</em></td><td>7 и выше</td><td>2,0 ГГц, 64-битный Intel-совместимый</td><td>2.0 ГБ</td><td>OpenGL 3.0 или DirectX 11</td></tr><tr><td><em>macOS</em></td><td>10.10 и выше</td><td>2,0 ГГц, 64-битный Intel-совместимый</td><td>2.0 ГБ</td><td>OpenGL 3.0</td></tr><tr><td><em>Linux</em></td><td>Ubuntu 16.04 и выше</td><td>2,0 ГГц, 64-битный Intel-совместимый</td><td>2.0 ГБ</td><td>OpenGL 3.0</td></tr></tbody></table><p>Что касается требования к объёму жёсткого диска, то он зависит от размера вашей игры. Если использовать изображения, аудио и видео очень высокого качества, соответственно и игра будет расти в размерах. Однако, необходимо найти компромисс между размером и качеством медиа файлов, чтобы игра получилась качественной и занимала как можно меньший размер на жестком диске.</p><h3 id="иконки-для-персонального-компьютера" tabindex="-1"><a class="header-anchor" href="#иконки-для-персонального-компьютера" aria-hidden="true">#</a> Иконки для персонального компьютера</h3><p>Чтобы задать значок для игры, поместите файл с расширением icon.ico для Windows и icon.icns для macOS в корневую папку игры. Если ваша иконка сохранена в PNG формате, то её нужно преобразовать в формат иконки, простое переименования файла здесь не подойдет. В Интернете имеется множество бесплатных онлайн-сервисов для такой операции.</p><h2 id="ren-py-для-мобильных-устроиств" tabindex="-1"><a class="header-anchor" href="#ren-py-для-мобильных-устроиств" aria-hidden="true">#</a> Ren’Py для мобильных устройств</h2><p>Помимо поддержки персональных компьютеров, Ren’Py может собрать игру для мобильных устройств на базе iOS и Android. Однако данный процесс более сложнее и будет подробно рассмотрен в дальнейших главах.</p><h3 id="развертываем-на-android-е" tabindex="-1"><a class="header-anchor" href="#развертываем-на-android-е" aria-hidden="true">#</a> Развертываем на Android-е</h3><p>Ren’Py поддерживает сборку игр для Android. Однако могут появиться не предсказуемые баги, и как следствие игры для этой операционной системы нужно тестировать более тщательно.</p><p>Первым шагом для отладки игры на Android является загрузка и установка <em>Ren’Py Android Packaging Tool (RAPT)</em>. Для этого на лаунчере нажмите <em>Android</em> в разделе «Действия с проектом», после чего вам будет предложено загрузить вышеупомянутый инструмент, если он ещё не был установлен.</p>',20),p=e("em",null,"Java Development Kit",-1),h={href:"https://adoptopenjdk.net/releases.html?variant=openjdk8&jvmVariant=hotspot",target:"_blank",rel:"noopener noreferrer"},u=e("p",null,"Теперь нужно настроить компьютер и Android для запуска и отладки игры на устройстве:",-1),c=e("li",null,[t("На Android устройстве откройте "),e("em",null,'"Настройки\\Параметры разработчика"'),t(" и включите "),e("em",null,[e("strong",null,"отладку по USB")]),t(".")],-1),g=e("strong",null,"Настройте соединение Android Debug Bridge (ADB)",-1),q=e("em",null,"apt-get install adb",-1),A={href:"https://developer.android.com/studio/run/oem-usb",target:"_blank",rel:"noopener noreferrer"},_=o("<li>Далее <strong>устанавливаем SDK</strong> зайдя в <em>&quot;Действие с проектом\\Android\\Установить SDK&quot;</em>. После установки SDK вам предложат создать <em>цифровой ключ</em>, который в дальнейшем будет использоваться для подписи пакетов, продаваемых на интернет-площадках, например, <em>Google Play</em>.</li><li><strong>Укажите информацию о вашей игре</strong> выбрав <em>&quot;Действие с проектом\\Android\\Настроить&quot;</em>.</li><li>Когда игра создана и настроена <strong>подключите Android устройство к компьютеру</strong> и выберите <em>&quot;Действие с проектом\\Android\\Собрать и установить&quot;</em>.</li>",3),P=o('<h3 id="иконки-и-экран-заставка" tabindex="-1"><a class="header-anchor" href="#иконки-и-экран-заставка" aria-hidden="true">#</a> Иконки и экран-заставка</h3><p>Чтобы задать иконки для приложения, и заставку загрузки разместите соответствующие изображения в корневом каталоге игры.</p><p>Иконка состоит из двух изображений переднего плана <em>android-icon_foreground.png</em> с прозрачным фоном и из фонового изображения <em>android-icon_background.png</em>. Размер этих иконок должен быть 432 x 432 пикселя. При сборке приложения Ren&#39;Py преобразует эти файлы в подходящий размер для каждого устройства.</p><p>При первом запуске игры на Android или когда игра загружает дополнительные ресурсы с Google Play используются экраны заставки. Так как эти процессы занимают некоторое время, то хорошим тоном будет задать данные изображения, поместив их в корневую папку игры. Изображение под именем <em>android-presplash.jpg</em>, будет использоваться при загрузке приложения, а изображение <em>android-downloading.jpg</em> при загрузке ресурсов.</p><h3 id="сочетания-клавиш-в-android" tabindex="-1"><a class="header-anchor" href="#сочетания-клавиш-в-android" aria-hidden="true">#</a> Сочетания клавиш в Android</h3><p>При запуске игры Ren&#39;Py на Android кнопки имеют следующие назначение:</p><ul><li><strong>Домой</strong>: возвращает вас на главный экран Android, приостанавливает игру и автоматически сохраняет её состояние.</li><li><strong>Увеличение/уменьшение громкости</strong>: используется для регулировки громкости.</li></ul><h3 id="тестирование-android-приложения" tabindex="-1"><a class="header-anchor" href="#тестирование-android-приложения" aria-hidden="true">#</a> Тестирование Android-приложения</h3><p>Для тестирования на портативных устройствах Ren&#39;Py поддерживает три режима эмуляции Android: телефон, планшет и телевизор. Для её запуска выберите &quot;Действие с проектом\\Android\\Эмуляция&quot;, а далее запускаете требуемый тип эмуляции. Для управления игровым процессом используются следующие клавиши: <em>клик мыши</em>, который эмулирует касание, <em>Esc</em> для вызова меню и <em>Page Up</em> для возврата назад, то есть соответствует кнопке &quot;Назад&quot;.</p><p>Рассмотрим режимы эмуляции:</p><ul><li><strong>Телефон</strong>: сенсорное управление имитируется с помощью мыши.</li><li><strong>Планшет</strong>: управление такое же, как и при эмуляции телефона на Android.</li><li><strong>Телевизор</strong>: этот режим эмулирует телевизор на базе операционной системы Android. Клавиатура привязана к пульту</li><li>дистанционного управления, где клавиши со стрелками выполняют навигацию, кнопка <em>Enter</em> это выбор, а <em>Esc</em> вызывает</li><li>меню. Кроме того, в этом режиме отображаются границы «Небезопасной зоны», в пределах которой контент может</li><li>отображаться не на всех телевизорах.</li></ul><h3 id="развертываем-на-ios" tabindex="-1"><a class="header-anchor" href="#развертываем-на-ios" aria-hidden="true">#</a> Развертываем на iOS</h3><p>Развертывать Ren’Py проекты для платформ на iOS можно только на персональном компьютере под управлением macOS. Так как поддержка данной платформы находится на стадии разработки, выпушенные игры на основе Ren&#39;Py не соответствуют установленным <em>Apple App Store</em> стандартам. Однако, многие игры проходят эту проверку и попадают в Apple App Store. Как совет, ваш игра не должна содержать технических проблем, и содержать как можно меньше насилия и обнаженных сцен.</p><p>Для тестирования Ren&#39;Py поддерживает два режима эмуляции это iPhone и iPad. Оба режима имитируют работу с сенсорным экраном, поэтому управление происходит при помощи мыши.</p><p>Чтобы добавить отладку в Ren’Py на iOS, сперва, нужно загрузить программное обеспечение <em>renios</em>. Для этого перейдите на лауйнчере Ren’Py &quot;Действие с проектом\\iOS&quot;, где вам будет предложено загрузить дополнительно программное обеспечение, если оно ещё не было установлено. После завершения установки станут доступны новый функционал характерный для устройств iOS, особенно такие как <em>эмуляция</em> iPhone и iPad.</p><blockquote><p><strong>Примечание:</strong></p><p>Хотя эмулятор позволяет увидеть, как работает ваш проект на платформе iOS, но ни что не заменит полноценное тестирование на реальном устройстве.</p></blockquote><h3 id="xcode-и-ios" tabindex="-1"><a class="header-anchor" href="#xcode-и-ios" aria-hidden="true">#</a> Xcode и iOS</h3><p>Следующем шагом трудоёмкого процесса отладки игр на iOS будет установка <em>интегрированной среды разработки (IDE) Xcode</em> от Apple. Если вы пользуетесь Mac, следовательно, у вас уже должен быть Apple ID. Тогда, просто скачиваем Xcode с App Store на свой Mac и устанавливаем его.</p><p>Выполним ещё несколько шагов, чтобы развернуть проект Ren’Py на iOS.</p><ol><li><strong>Зарегистрируйтесь в программе <em>Apple Developer Program</em></strong>, перейдя по ссылке: https://developer.apple.com/programs/enroll/. Будьте готовы заплатить ежегодно 99 долларов США за участия в данной программе.</li><li><strong>Через лаунчер Ren’Py создайте новый проект для Xcode</strong>. Для этого выберите <em>&quot;Действие с проектом\\iOS\\Выбрать Директорию Проектов Xcode&quot;</em>. Затем <em>&quot;Создать Проект Xcode&quot;</em>. Имя проекта будет автоматически взято с названия игры в Ren’Py.</li><li>Далее для <strong>открытия проекта</strong> нажмите <em>&quot;Запустить Xcode&quot;</em>.</li><li><strong>Добавьте свой Apple ID в Xcode</strong>. Выбираем пункт меню <em>&quot;Xcode\\Preferences&quot;</em> и переходим на вкладку <em>&quot;Accounts&quot;</em>. Используя кнопку плюс в нижней части окна, добавляем свой Apple ID к проекту.</li><li><strong>Назначьте свой проект команде</strong>. В Xcode выбираем проект, переходим на вкладку <em>&quot;General&quot;</em>, находим раздел <em>&quot;Signing&quot;</em>. Убеждаемся, что флажок <em>&quot;Automatically manage signing&quot;</em> установлен, и по надобности выбираем команду в поле <em>&quot;Team&quot;</em>.</li><li><strong>Запускаем игры на iOS устройстве</strong>. Подключите устройство к Mac. После запуска проекта на реальном устройстве, Xcode настроит все необходимые подписи для развертывания приложения.</li><li><strong>Экспортируйте <em>сертификаты</em> и <em>профили</em></strong>. Для этого выбираем пункт меню <em>&quot;Xcode\\Preferences&quot;</em> и переходим на вкладку <em>&quot;Accounts&quot;</em>. Далее внизу окна нажимаем шестерёнку, после чего в выпавшем списке выбираем <em>&quot;Export Accounts&quot;</em>.</li><li><strong>В открывшемся окне введите имя файла в поле <em>&quot;Save As&quot;</em></strong> и пароль в поля <em>&quot;Password&quot;</em> и <em>&quot;Verify&quot;</em>, после чего нажмите кнопку <em>&quot;Save&quot;</em>. Теперь сохранённый файл с вашей учетной записью разработчика надежно зашифрован и защищен.</li></ol><p>Если вам позже понадобиться восстановить учетную запись разработчика в Xcode, то просто на вкладке &quot;Accounts&quot; выберите <em>&quot;Import Accounts&quot;</em> укажите ранее сохранённый файл и нажмите <em>&quot;Open&quot;</em>.</p><h3 id="обновляем-ваши-ios-проекты" tabindex="-1"><a class="header-anchor" href="#обновляем-ваши-ios-проекты" aria-hidden="true">#</a> Обновляем ваши iOS-проекты</h3>',22);function y(S,x){const n=i("ExternalLinkIcon");return a(),s("div",null,[l,e("p",null,[t("Так же вам понадобится "),p,t(". Ссылку для скачивания можно найти в официальной документации. На данный момент URL-адрес такой: "),e("a",h,[t("https://adoptopenjdk.net/releases.html?variant=openjdk8&jvmVariant=hotspot"),d(n)]),t(".")]),u,e("ol",null,[c,e("li",null,[g,t(" между устройством и персональным компьютером. Для этого подключите устройство к компьютеру, чтобы установить драйвер. MacOS это сделает автоматически. В Linux нужно загрузить пакет выполнив команду "),q,t(". Что касается Windows, следуя инструкции: "),e("a",A,[t("https://developer.android.com/studio/run/oem-usb"),d(n)]),t(", загрузите и установите USB-драйвер.")]),_]),P])}const f=r(m,[["render",y],["__file","chapter_6.html.vue"]]);export{f as default};
